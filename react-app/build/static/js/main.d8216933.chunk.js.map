{"version":3,"sources":["store/session.js","utils.js","store/utils.js","store/posts.js","components/CreatePostPage/index.js","components/Modals/index.js","static/default-profile-image.png","components/ProfileIcon/index.js","components/CommentCard/EditCommentForm.js","components/CommentCard/index.js","components/PostModal/CommentForm.js","components/PostModal/EditPostForm.js","components/PostModal/index.js","components/Modals/PostModalPopup.js","components/PostCard/index.js","components/FeedPage/FeedColumn.js","static/loading-sphere-colorbg.gif","components/LoadingSpinner/index.js","static/feed-empty-1.jpg","static/feed-empty-2.jpg","static/feed-empty-3.jpg","components/FeedPage/index.js","store/search.js","components/SearchBar/index.js","components/NavProfileButton/index.js","static/hologram-logo.png","components/FollowsList/index.js","components/NavBar/index.js","components/Footer/index.js","components/HeaderFooterWrapper/index.js","components/SignUpPage/index.js","components/LoginPage/index.js","components/auth/ProtectedRoute.js","components/PageNotFound/index.js","store/user.js","components/PostCard/ProfilePostCard.js","components/ProfilePage/index.js","components/SearchPage/index.js","components/MessagePage/MessageContainer.js","store/threads.js","components/SearchBar/UserSearchBar.js","components/MessagePage/MessagesSidebar.js","components/MessagePage/index.js","components/SettingsPage/index.js","App.js","store/index.js","index.js"],"names":["SET_USER","REMOVE_USER","UPDATE_USER","setUser","user","type","payload","initialState","login","email","password","async","response","fetch","method","headers","body","JSON","stringify","ok","data","json","dispatch","status","errors","logout","sortByCreatedAt","list","sort","a","b","Date","parse","createdAt","getTimeElapsed","ms","now","secondsAgo","Math","floor","minutesAgo","hoursAgo","daysAgo","monthsAgo","yearsAgo","normalizePosts","postsArr","reduce","obj","post","timeElapsed","id","comments","normalizeOneLevel","postLikes","reNormalizePosts","postsDict","Object","values","reNormalizeOneLevel","dataDict","dataArr","ADD_POST","LOAD_POSTS","LOAD_ADDITIONAL_POSTS","REMOVE_POST","ADD_COMMENT","REMOVE_COMMENT","ADD_LIKE","REMOVE_LIKE","addPost","loadPosts","posts","loadAdditionalPosts","addComment","comment","fetchPosts","userId","page","res","deletePost","postId","removePost","deleteComment","commentId","removeComment","togglePostLike","likeId","removeLike","like","postsReducer","newState","state","action","forEach","CreatePostPage","useDispatch","history","useHistory","caption","setCaption","useState","uploadFile","setUploadFile","showErrors","setShowErrors","validationErrors","setValidationErrors","useEffect","length","push","s3upload","file","console","log","formData","FormData","append","axios","onSubmit","e","preventDefault","showLoading","url","newPost","postsActions","postImageUrl","then","hideLoading","window","scrollTo","top","left","behavior","catch","style","backgroundColor","height","maxWidth","position","right","margin","updateTime","progressIncrease","maxProgress","includes","border","src","URL","createObjectURL","alt","htmlFor","name","accept","onChange","target","files","hidden","className","rows","placeholder","value","color","onClick","confirm","map","err","Modal","children","closeModal","ReactDOM","createPortal","document","getElementById","ProfileIcon","handle","profileImageUrl","defaultProfileImage","EditCommentForm","setShowEdit","content","setContent","newComment","editedComment","_","borderColor","cursor","CommentCard","sessionUser","useSelector","session","showEdit","showButtons","setShowButtons","tick","setTick","split","timer","endsWith","setTimeout","prev","clearTimeout","onMouseEnter","onMouseLeave","width","minWidth","minHeight","location","reload","display","justifyContent","icon","faEdit","faTrash","CommentForm","showCharCount","setShowCharCount","querySelector","scrollTop","onFocus","onBlur","autoComplete","EditPostForm","setEditCaption","editedPost","PostModal","setShowModal","likes","setLikes","orderedComments","setOrderedComments","isLiked","setIsLiked","find","editCaption","toggleLike","fontSize","faHeartSolid","faHeart","emptyComment","PostModalPopup","postImageRef","isSearchItem","showModal","navbar","navBackground","footer","footerBackground","feedPageBody","profilePageBody","classList","add","remove","modalId","faImage","ref","PostCard","setComments","fullHeart","emptyHeart","FeedColumn","column","LoadingSpinner","spinner","FeedPage","isLoaded","setIsLoaded","nextPage","setNextPage","orderedPosts","setOrderedPosts","postsForListOne","postsForListTwo","postsForListThree","counter","error","scrolling_function","innerHeight","scrollY","offsetHeight","removeEventListener","addEventListener","fontWeight","letterSpacing","fontStyle","emptyFeedImage1","emptyFeedImage3","emptyFeedImage2","LOAD_SEARCH","loadSearch","results","fetchQuery","query","onlyUsers","searchReducer","options","includeScore","findAllMatches","useExtendedSearch","keys","weight","SearchBar","searchMenuRef","useRef","searchInputRef","setQuery","setResults","showMenu","setShowMenu","dbQueryResults","postsSet","Set","usersSet","item","undefined","newResults","filter","has","prevResults","Fuse","search","openMenu","portal","listener","current","contains","replace","onKeyPress","faSearch","slice","result","i","hasOwnProperty","goToProfile","faUser","firstName","lastName","NavProfileButton","closeMenu","padding","to","faGear","faArrowRightFromBracket","FollowsList","follows","follow","scroll","NavBar","showFollowers","setShowFollowers","showFollowings","setShowFollowings","closeFollowers","closeFollowings","logo","faHouse","faCirclePlus","faEnvelope","followers","following","Footer","showInfo","setShowInfo","href","rel","faGithub","faLinkedin","HeaderFooterWrapper","SignUpPage","setErrors","setFirstName","setLastName","setHandle","setEmail","setPassword","repeatPassword","setRepeatPassword","signUp","ind","required","LoginPage","ProtectedRoute","props","PageNotFound","ADD_USER","ADD_FOLLOW","REMOVE_FOLLOW","fetchUser","addUser","toggleUserFollow","followedId","sessionId","followerId","userReducer","followersArray","Array","isArray","splice","indexOf","follower","ProfilePostCard","currentTarget","click","ProfilePage","useParams","isFollowed","setIsFollowed","userActions","followed","faPlus","paddingLeft","paddingRight","bio","SearchPage","MessageContainer","thread","messages","message","setMessage","disabled","messagesMap","scrollHeight","threadName","size","ADD_THREAD","LOAD_THREAD","ADD_MESSAGE","LOAD_THREAD_PREVIEWS","fetchThread","threadId","loadThread","createThread","users","newThread","createMessage","newMessage","addMessage","fetchThreadPreviews","threadPreviews","loadThreadPreviews","threadsReducer","UserSearchBar","userIds","setUserIds","setSelectedUsers","stateResults","fuseResults","concat","dropdown","searchInput","addToSelectedUsers","idSet","selectedUsers","maxHeight","MessagesSidebar","currThreadId","setCurrThreadId","faXmark","removeFromSelectedUsers","delete","join","threadsActions","from","preview","username","numberOfUsers","profileImage","socket","io","connect","MessagePage","threads","prevThreadId","setPrevThreadId","setMessages","setDisabled","on","disconnect","emit","room","send","SettingsPage","newFirstName","setNewFirstName","newLastName","setNewLastName","newBio","setNewBio","setShowLoading","editedUser","sessionActions","App","loaded","setLoaded","path","exact","rootReducer","combineReducers","loadingBar","loadingBarReducer","enhancer","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","render","StrictMode"],"mappings":"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","file":"static/js/main.d8216933.chunk.js","sourcesContent":["// constants\nconst SET_USER = 'session/SET_USER';\nconst REMOVE_USER = 'session/REMOVE_USER';\nconst UPDATE_USER = 'session/UPDATE_USER';\n\nconst setUser = (user) => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER,\n});\n\nconst updateUser = (user) => ({\n  type: UPDATE_USER,\n  payload: user\n})\n\nconst initialState = { user: null };\n\nexport const authenticate = () => async (dispatch) => {\n  const response = await fetch('/api/auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    if (data.errors) {\n      return;\n    }\n\n    dispatch(setUser(data));\n  }\n}\n\nexport const fetchUser = (userId) => async (dispatch) => {\n  const res = await fetch(`/api/users/${userId}/`);\n\n  if (res.ok) {\n    const user = await res.json();\n    dispatch(setUser(user));\n    return user;\n  }\n};\n\nexport const login = (email, password) => async (dispatch) => {\n  const response = await fetch('/api/auth/login/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n\n}\n\nexport const logout = () => async (dispatch) => {\n  const response = await fetch('/api/auth/logout/', {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n\n  if (response.ok) {\n    dispatch(removeUser());\n  }\n};\n\n\nexport const signUp = (firstName, lastName, handle, email, password) => async (dispatch) => {\n  const response = await fetch('/api/auth/signup/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      firstName,\n      lastName,\n      handle,\n      email,\n      password,\n    }),\n  });\n\n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data));\n    dispatch(setUser(data));\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n}\n\n\nexport const editUser = ({ firstName, lastName, bio, userId, profileImageUrl }) => async dispatch => {\n  const res = await fetch(`/api/users/${userId}/`, {\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      firstName, lastName, bio, profileImageUrl\n    })\n  });\n\n\n  if (res.ok) {\n    const editedUser = await res.json();\n    dispatch(setUser(editedUser));\n    return editedUser;\n  }\n}\n\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return { user: action.payload }\n    case REMOVE_USER:\n      return { user: null }\n    case UPDATE_USER:\n      return { ...state, session: action.payload }\n    default:\n      return state;\n  }\n}\n","export function sortByCreatedAt(list) {\n\n    return list.sort((a, b) => {\n\n        if (Date.parse(b.createdAt) > Date.parse(a.createdAt)) {\n            return 1\n        } else if (Date.parse(a.createdAt) > Date.parse(b.createdAt)) {\n            return -1\n        } else {\n            return 0\n        }\n    })\n}\n\nexport const getTimeElapsed = createdAt => {\n    const ms = Date.now() - Date.parse(createdAt);\n\n    const secondsAgo = Math.floor(ms / 1000);\n    const minutesAgo = Math.floor(secondsAgo / 60)\n    const hoursAgo = Math.floor(minutesAgo / 60);\n    const daysAgo = Math.floor(hoursAgo / 24);\n    const monthsAgo = Math.floor(daysAgo / 30);\n    const yearsAgo = Math.floor(daysAgo / 365);\n\n    if (secondsAgo <= 0) return '0 seconds ago';\n\n    if (secondsAgo === 1) return '1 second ago';\n    else if (minutesAgo < 1) return secondsAgo + ' seconds ago';\n\n    if (minutesAgo === 1) return '1 minute ago';\n    else if (hoursAgo < 1) return minutesAgo + ' minutes ago';\n\n    if (hoursAgo === 1) return '1 hour ago';\n    else if (daysAgo < 1) return hoursAgo + ' hours ago';\n\n    if (daysAgo === 1) return '1 day ago';\n    else if (monthsAgo < 1) return daysAgo + ' days ago'\n\n    if (monthsAgo === 1) return '1 month ago';\n    else if (yearsAgo < 1) return monthsAgo + ' months ago';\n\n    if (yearsAgo === 1) return '1 year ago';\n    else return yearsAgo + ' years ago';\n}\n","import { getTimeElapsed } from \"../utils\";\n\nexport const normalizePosts = (postsArr) => {\n    return postsArr.reduce((obj, post) => {\n        post.timeElapsed = getTimeElapsed(post.createdAt);\n        obj[post.id] = post;\n\n        obj[post.id].comments = {\n            ...normalizeOneLevel(post.comments),\n        }\n\n        obj[post.id].postLikes = {\n            ...normalizeOneLevel(post.postLikes),\n        }\n\n        // obj[post.id].user = {\n        //     ...post.user\n        // }\n\n        return obj\n    }, {})\n}\n\nexport const reNormalizePosts = (postsDict) => {\n    return Object.values(postsDict).reduce((obj, post) => {\n        post.timeElapsed = getTimeElapsed(post.createdAt);\n        obj[post.id] = post;\n\n        obj[post.id].comments = {\n            ...reNormalizeOneLevel(post.comments),\n        }\n\n        obj[post.id].postLikes = {\n            ...reNormalizeOneLevel(post.postLikes),\n        }\n\n        return obj\n\n    }, {})\n}\n\n\nexport const reNormalizeOneLevel = (dataDict) => {\n    return Object.values(dataDict).reduce((obj, data) => {\n        data.timeElapsed = getTimeElapsed(data.createdAt);\n        obj[data.id] = data;\n        return obj;\n    }, {})\n}\n\nexport const normalizeOneLevel = (dataArr) => {\n    return dataArr.reduce((obj, data) => {\n        data.timeElapsed = getTimeElapsed(data.createdAt);\n        obj[data.id] = data;\n        return obj;\n    }, {})\n}\n\n\n\nexport const normalizeThreads = (threadsArr) => {\n    return threadsArr.reduce((obj, thread) => {\n        thread.timeElapsed = getTimeElapsed(thread.updatedAt);\n        obj[thread.id] = thread;\n\n        obj[thread.id].users = {\n            ...normalizeOneLevel(thread.users),\n        }\n\n        obj[thread.id].messages = [...thread.messages]\n\n        return obj\n    }, {})\n}\n","// import { csrfFetch } from \"./csrf\"; // ??? WILL WE BE DOING CSRF FETCHES AGAIN ???\nimport { getTimeElapsed } from \"../utils\";\nimport { normalizePosts, reNormalizePosts } from \"./utils\";\n// ACTION VARIABLES ***************************************\nconst ADD_POST = 'posts/ADD_POST';\nconst LOAD_POSTS = 'posts/LOAD_POSTS';\nconst LOAD_ADDITIONAL_POSTS = 'posts/LOAD_ADDITIONAL_POSTS';\nconst REMOVE_POST = 'posts/REMOVE_POST';\n\nconst ADD_COMMENT = 'comments/ADD_COMMENT';\nconst REMOVE_COMMENT = 'comments/REMOVE_COMMENT';\n\nconst ADD_LIKE = 'likes/ADD_LIKE';\nconst REMOVE_LIKE = 'likes/REMOVE_LIKE';\n\n// ACTION CREATORS ****************************************\n\n// POSTS\nconst addPost = (post) => {\n    return {\n        type: ADD_POST,\n        post\n    }\n}\n\nconst loadPosts = (posts) => {\n    return {\n        type: LOAD_POSTS,\n        posts\n    }\n}\n\nconst loadAdditionalPosts = (posts) => {\n    return {\n        type: LOAD_ADDITIONAL_POSTS,\n        posts\n    }\n}\n\nconst removePost = (postId) => {\n    return {\n        type: REMOVE_POST,\n        postId\n    }\n}\n\n// COMMENTS\n\n// For adding new comment and updating existing comments\n// POST PUT\nconst addComment = (comment) => {\n    return {\n        type: ADD_COMMENT,\n        comment\n    }\n}\n\n\n// DELETE\nconst removeComment = (postId, commentId) => {\n    return {\n        type: REMOVE_COMMENT,\n        postId,\n        commentId\n    }\n}\n\n\n\n// LIKES\nconst addLike = (like) => {\n    return {\n        type: ADD_LIKE,\n        like\n    }\n}\n\nconst removeLike = (postId, likeId) => {\n    return {\n        type: REMOVE_LIKE,\n        postId,\n        likeId\n    }\n}\n\n// THUNK ACTION CREATORS **********************************\n\n//POSTS THUNKS\n\nexport const fetchPosts = (type = 'feed', userId = null, page = 1) => async dispatch => {\n    let res;\n\n    if (type === 'feed') {\n        // userId should is not specified because backend route will use session user\n        res = await fetch(`/api/posts/pages/${page}/`);\n        if (res.ok) {\n            const posts = await res.json();\n            if (page === 1) dispatch(loadPosts(posts));\n            else dispatch(loadAdditionalPosts(posts));\n            return posts;\n        }\n    } else if (type === 'profile') {\n        res = await fetch(`/api/users/${userId}/posts/`);\n    }\n\n    if (res.ok) {\n        const posts = await res.json();\n        dispatch(loadPosts(posts));\n        return posts;\n    }\n}\n\nexport const createPost = post => async dispatch => {\n    const res = await fetch('/api/posts/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(post)\n    });\n\n\n    if (res.ok) {\n        const newPost = await res.json();\n        dispatch(addPost(newPost));\n        return newPost;\n    }\n}\n\nexport const editPost = post => async dispatch => {\n    const res = await fetch(`/api/posts/${post.id}/`, {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(post)\n    });\n\n    if (res.ok) {\n        const editedPost = await res.json();\n\n        dispatch(addPost(editedPost));\n        return editedPost;\n    }\n}\n\nexport const deletePost = (postId) => async dispatch => {\n    const res = await fetch(`/api/posts/${postId}/`, {\n        method: 'DELETE',\n    });\n\n    if (res.ok) {\n        const postId = await res.json();\n        if (postId) {\n            await dispatch(removePost(postId));\n            return postId;\n        }\n    }\n}\n\n\n// COMMENTS THUNKS\n\nexport const createComment = comment => async dispatch => {\n    const res = await fetch(`/api/posts/${comment.postId}/comments/`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(comment)\n    });\n\n    if (res.ok) {\n        const newComment = await res.json();\n        dispatch(addComment(newComment));\n        return newComment;\n    }\n}\n\nexport const editComment = comment => async dispatch => {\n    const res = await fetch(`/api/posts/${comment.postId}/comments/${comment.id}/`, {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(comment)\n    });\n\n    if (res.ok) {\n        const editedComment = await res.json();\n        dispatch(addComment(editedComment));\n        return editedComment;\n    }\n}\n\nexport const deleteComment = (commentId, postId) => async dispatch => {\n    const res = await fetch(`/api/posts/${postId}/comments/${commentId}/`, {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    if (res.ok) {\n        const commentId = await res.json();\n        dispatch(removeComment(postId, commentId));\n        return { postId, commentId };\n    }\n}\n\n\n// LIKES\nexport const togglePostLike = (postId) => async dispatch => {\n    const res = await fetch(`/api/posts/${postId}/like/`, {\n        method: \"PUT\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n    });\n\n    if (res.ok) {\n        const data = await res.json();\n        if (data.status === 'deleted') {\n            dispatch(removeLike(data.postId, data.likeId));\n        } else {\n            dispatch(addLike(data));\n        }\n        return data;\n    }\n}\n\n\n\n// REDUCER ************************************************\nconst postsReducer = (state = {}, action) => {\n\n    let newState;\n\n    switch (action.type) {\n\n        case ADD_POST: {\n            const newState = { ...state };\n            action.post.timeElapsed = getTimeElapsed(action.post.createdAt);\n            action.post.comments.forEach(comment => {\n                comment.timeElapsed = getTimeElapsed(comment.createdAt)\n            })\n            newState[action.post.id] = { ...action.post };\n\n            return newState;\n        }\n\n        case LOAD_POSTS: {\n            return {\n                // ...state,\n                ...normalizePosts(action.posts),\n            };\n        }\n\n        case LOAD_ADDITIONAL_POSTS: {\n            return {\n                ...state,\n                ...normalizePosts(action.posts),\n            };\n        }\n\n        case REMOVE_POST: {\n            newState = {\n                ...reNormalizePosts(state)\n            };\n\n            delete newState[action.postId];\n            return newState;\n        }\n\n        // COMMENTS ***********************************************************\n        case ADD_COMMENT: {\n            const postId = action.comment.postId\n            action.comment.timeElapsed = getTimeElapsed(action.comment.createdAt);\n\n\n            return {\n                ...state,\n                [postId]: {\n                    ...state[postId],\n                    comments: {\n                        ...state[postId].comments,\n                        [action.comment.id]: action.comment,\n                    }\n                }\n            }\n        }\n\n        case REMOVE_COMMENT: {\n            newState = {\n                ...state,\n                [action.postId]: {\n                    ...state[action.postId],\n                    comments: {\n                        ...state[action.postId].comments,\n                    }\n                }\n            }\n\n            delete newState[action.postId].comments[action.commentId]\n\n            return newState\n        }\n\n        // LIKES ***********************************************************\n\n        case ADD_LIKE: {\n            const postId = action.like.postId\n\n            return {\n                ...state,\n                [postId]: {\n                    ...state[postId],\n                    postLikes: {\n                        ...state[postId].postLikes,\n                        [action.like.id]: action.like,\n                    }\n                }\n            }\n        }\n\n        case REMOVE_LIKE: {\n\n            newState = {\n                ...state,\n                [action.postId]: {\n                    ...state[action.postId],\n                    postLikes: {\n                        ...state[action.postId].postLikes\n                    }\n                }\n            }\n\n            delete newState[action.postId].postLikes[action.likeId];\n            return newState;\n        }\n\n        default: {\n            return state;\n        }\n    }\n\n};\n\nexport default postsReducer;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport LoadingBar, { showLoading, hideLoading } from 'react-redux-loading-bar';\n\n\nimport * as postsActions from '../../store/posts'\nimport './CreatePostPage.css'\n\nexport default function CreatePostPage() {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst [caption, setCaption] = useState('');\n\tconst [uploadFile, setUploadFile] = useState();\n\tconst [showErrors, setShowErrors] = useState(false);\n\tconst [validationErrors, setValidationErrors] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst errors = [];\n\t\tif (caption.length > 255) errors.push('Caption must be less than 255 characters');\n\t\tif (!uploadFile) errors.push('Please choose an image first before uploading.')\n\t\tsetValidationErrors(errors);\n\t}, [caption, uploadFile]);\n\n\n\tconst onSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tif (validationErrors.length) return setShowErrors(true);\n\n\t\tdispatch(showLoading());\n\t\tconst url = await s3upload(uploadFile)\n\n\t\tconst post = {\n\t\t\tcaption,\n\t\t\tpostImageUrl: url\n\t\t}\n\n\t\tdispatch(postsActions.createPost(post))\n\t\t\t.then(async post => {\n\t\t\t\tdispatch(hideLoading());\n\t\t\t\twindow.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\t\t\t\treturn history.push(`/`);\n\t\t\t})\n\t\t\t.catch(async (res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tconst data = await res.json();\n\t\t\t\tif (data && data.errors) {\n\t\t\t\t\tsetValidationErrors(data.errors);\n\t\t\t\t\tsetShowErrors(true);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tconst s3upload = async (file) => {\n\t\tif (!file) return console.log('upload a file first');\n\t\tconst formData = new FormData()\n\n\t\tformData.append('file', file)\n\n\t\tconst res = await axios.post(\"/api/s3/upload/\", formData);\n\n\t\treturn res.data\n\t}\n\n\tconst cancelUpload = (e) => {\n\t\tif (window.confirm('Are you sure you want to cancel your upload?')) {\n\t\t\twindow.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\t\t\thistory.push('/');\n\t\t}\n\t}\n\n\n\treturn (\n\t\t<div id='post-upload'>\n\t\t\t<form onSubmit={onSubmit} id='post-form'>\n\t\t\t\t<LoadingBar style={{ backgroundColor: 'var(--color-apricot)', height: '12px', maxWidth: '500px', position: 'absolute', top: '0', left: '0', right: '0', margin: '0 auto' }} updateTime={100} progressIncrease={5} maxProgress={95} />\n\t\t\t\t<div id='upload-and-preview-section'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tid='preview'\n\t\t\t\t\t\tstyle={validationErrors.includes('Please choose an image first before uploading.') && showErrors ? { border: '1.4px solid red' } : {}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{uploadFile &&\n\t\t\t\t\t\t\t<img src={URL.createObjectURL(uploadFile)} alt='preview' id='image-preview' />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id='upload'>\n\t\t\t\t\t\t<label htmlFor='img' id='select-file-button'>SELECT IMAGE</label>\n\t\t\t\t\t\t<input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\"\n\t\t\t\t\t\t\tonChange={e => setUploadFile(() => {\n\t\t\t\t\t\t\t\treturn e.target.files[0];\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\thidden\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t\t<div className='upload__bottom'>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tid='caption'\n\t\t\t\t\t\tclassName={validationErrors.includes('Caption must be less than 255 characters') ? 'red-outline' : ''}\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\tplaceholder='enter a caption...'\n\t\t\t\t\t\tname='caption'\n\t\t\t\t\t\tvalue={caption}\n\t\t\t\t\t\tonChange={(e) => setCaption(e.target.value)}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t<small className='character-count'\n\t\t\t\t\t\tstyle={caption.length > 255 ? { color: 'red' } : {}}\n\t\t\t\t\t>{caption.length}/255</small>\n\t\t\t\t\t<div className='upload-button-container'>\n\t\t\t\t\t\t<button type='submit' id='upload-button'>UPLOAD</button>\n\t\t\t\t\t\t<button type='button'\n\t\t\t\t\t\t\tid='cancel-button'\n\t\t\t\t\t\t\tonClick={cancelUpload}\n\t\t\t\t\t\t>CANCEL</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t{!showErrors ? null : (\n\t\t\t\t<div className='error-container'>\n\t\t\t\t\t{validationErrors.map(err => (\n\t\t\t\t\t\t<div key={err}>{err}</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nexport default function Modal({ children, closeModal }) {\n\n  return ReactDOM.createPortal(\n    <div id=\"modal\">\n      <div id=\"modal_background\" onClick={closeModal}></div>\n      <div id=\"modal_content\">\n        {children}\n      </div>\n    </div>,\n    document.getElementById('portal'))\n}\n","export default __webpack_public_path__ + \"static/media/default-profile-image.1d0c42d3.png\";","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport defaultProfileImage from '../../static/default-profile-image.png'\n\nimport './ProfileIcon.css'\n\nexport default function ProfileIcon({ user }) {\n    const history = useHistory();\n\n    return (\n        <div\n            className='profile-icon-border'\n            onClick={(e) => {\n                window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n                return history.push(`/${user.handle}`);\n            }}\n\n        >\n            <img\n                className='profile-icon'\n\t\t\t\tsrc={user.profileImageUrl !== '/default-profile-image.png' ? user.profileImageUrl : defaultProfileImage}\n                alt=\"profile preview\"\n            />\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as postsActions from '../../store/posts'\nimport './EditCommentForm.css';\n\nfunction EditCommentForm({ comment, setShowEdit }) {\n    const dispatch = useDispatch();\n    // const { commentId, postId } = useParams()\n    // const comment = useSelector(state => state.posts[postId].comments[commentId])\n    const [content, setContent] = useState(comment.content);\n    const [validationErrors, setValidationErrors] = useState([])\n\n    useEffect(() => {\n        const errors = [];\n        if (!content.length) errors.push('!length');\n        if (content.length > 255) errors.push('length>255')\n\n        setValidationErrors(errors);\n    }, [content]);\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (validationErrors.length) return;\n\n        const newComment = {\n            id: comment.id,\n            content,\n            postId: comment.postId\n        }\n\n        dispatch(postsActions.editComment(newComment))\n            .then(_ => {\n                setShowEdit(false);\n            })\n            .catch(async (res) => {\n                const data = await res.json();\n                if (data && data.errors) {\n                    setValidationErrors(data.errors);\n                }\n            });\n    }\n\n\n    return (\n        <form onSubmit={onSubmit} className=\"edit-comment-form\">\n            <textarea\n                type='text'\n                id='edit-comment-input'\n                name='content'\n                value={content}\n                style={content.length > 255 || content.length === 0 ? { borderColor: 'red' } : {}}\n                onChange={(e) => setContent(e.target.value)}\n            />\n\n            <div id='edit-comment-button-container'>\n                <small style={content.length > 255 || content.length === 0 ? { color: 'red' } : {}}\n                >{content.length}/255</small>\n                <div>\n                    <button type='button' id='cancel-edit-comment' onClick={() => setShowEdit(false)}>cancel</button>\n                    <button type='submit'\n                        id='submit-edit-comment'\n                        style={{ color: 'var(--color-purple)', cursor: validationErrors.length ? 'not-allowed' : 'pointer' }}\n                    >submit</button>\n                </div>\n            </div>\n\n        </form>\n    );\n}\n\nexport default EditCommentForm;\n\n// {!showErrors ? null : (\n//     <ul>\n//         {validationErrors.map(err => (\n//             <li key={err}>{err}</li>\n//         ))}\n//     </ul>\n// )}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport * as postsActions from '../../store/posts'\nimport ProfileIcon from '../ProfileIcon/index';\nimport './CommentCard.css'\nimport EditCommentForm from './EditCommentForm';\n\nexport default function CommentCard({ post, comment }) {\n\tconst dispatch = useDispatch();\n\tlet sessionUser = useSelector(state => state.session.user);\n\tconst [showEdit, setShowEdit] = useState(false);\n\tconst [showButtons, setShowButtons] = useState(false);\n\tconst [tick, setTick] = useState(+(comment.timeElapsed.split(' ')[0]) + 1);\n\n\tuseEffect(() => {\n\t  let timer;\n\t  \n\t  if (tick === 59) {\n\t\ttimer = setTimeout(() => {\n\t\t  comment.timeElapsed = '1 minute ago';\n\t\t  setTick(60);\n\t\t}, 1000);\n\t\treturn;\n\t  }\n\t  \n\t  if (comment.timeElapsed.endsWith('seconds ago') || comment.timeElapsed.endsWith('second ago')) {\n\t\ttimer = setTimeout(() => setTick(prev => prev + 1), 1000);\n\t\tcomment.timeElapsed = `${tick + 1} seconds ago`;\n\t  }\n\t  \n\t  return () => clearTimeout(timer);\n\t}, [comment, tick]);\n\n\tconst deleteComment = (commentId) => {\n\t\tif (window.confirm('Are you sure you would like to delete your comment?')) {\n\t\t\tdispatch(postsActions.deleteComment(commentId, post.id))\n\t\t}\n\t}\n\t\n\tconst redirectAndRefresh = (e) => {\n\t\t\n\t\twindow.location.reload(false);\n\t}\n\n\n\treturn (\n\t\t<div className='comment-container' onMouseEnter={() => setShowButtons(true)} onMouseLeave={() => setShowButtons(false)}>\n\t\t\t<div style={{ width: '30px', height: '30px', minWidth: '30px', minHeight: '30px' }} onClick={redirectAndRefresh}>\n\t\t\t\t<ProfileIcon user={comment.user} />\n\t\t\t</div>\n\n\t\t\t<div className='comment-body'>\n\t\t\t\t{showEdit ? (\n\t\t\t\t\t<EditCommentForm comment={comment} setShowEdit={setShowEdit} />\n\t\t\t\t) : (\n\t\t\t\t\t<div className='handle-and-comment-content'>\n\t\t\t\t\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\n\t\t\t\t\t\t\t<span className='comment-user-handle'>{comment.user.handle}</span>\n\t\t\t\t\t\t\t<span style={{ color: 'var(--color-gray)' }}>{comment.timeElapsed}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span className='comment-text'>{comment.content}</span>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t{comment.user.id === sessionUser.id && showButtons &&\n\t\t\t\t<div className='edit-and-delete-buttons'>\n\t\t\t\t\t<FontAwesomeIcon icon={faEdit} id='edit-comment-button' onClick={() => setShowEdit(!showEdit)} />\n\t\t\t\t\t<FontAwesomeIcon icon={faTrash} id='delete-comment-button' onClick={() => deleteComment(comment.id)} />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// import Picker from 'emoji-picker-react';\n\nimport * as postsActions from '../../store/posts'\nimport './CommentForm.css';\n\nfunction CommentForm({ postId }) {\n\tconst dispatch = useDispatch();\n\tconst [content, setContent] = useState('');\n\tconst [showCharCount, setShowCharCount] = useState(false)\n\tconst [validationErrors, setValidationErrors] = useState([])\n\n\tuseEffect(() => {\n\t\tconst errors = [];\n\t\tif (!content.length) errors.push('!content');\n\t\tif (content.length > 255) errors.push('content>255');\n\n\t\tsetValidationErrors(errors);\n\t}, [content]);\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (validationErrors.length) return;\n\n\t\tconst comment = {\n\t\t\tcontent, postId\n\t\t}\n\n\t\tdispatch(postsActions.createComment(comment))\n\t\t\t.then(_ => {\n\t\t\t\tsetContent('');\n\t\t\t\tconst commentsList = document.querySelector(\".comment-section\");\n\t\t\t\tcommentsList.scrollTop = 0;\n\t\t\t})\n\t\t\t.catch(async (res) => {\n\t\t\t\tconst data = await res.json();\n\t\t\t\tif (data && data.errors) {\n\t\t\t\t\tsetValidationErrors(data.errors);\n\t\t\t\t}\n\t\t\t});\n\t}\n\t\n\n\treturn (\n\t\t<div id='comment-form-wrapper'>\n\t\t\t<form onSubmit={onSubmit} onFocus={() => setShowCharCount(true)} onBlur={() => setShowCharCount(false)}>\n\t\t\t\t<input\n\t\t\t\t\tid='comment-input'\n\t\t\t\t\tname='content'\n\t\t\t\t\tvalue={content}\n\t\t\t\t\tonChange={(e) => setContent(e.target.value)}\n\t\t\t\t\tplaceholder='add a comment'\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t/>\n\n\t\t\t\t<button type='submit'\n\t\t\t\t\tid='comment-submit'\n\t\t\t\t\tstyle={{ cursor: validationErrors.length ? 'not-allowed' : 'pointer' }}\n\t\t\t\t>post</button>\n\n\t\t\t\t{showCharCount &&\n\t\t\t\t\t<small style={content.length > 255 || content.length === 0 ? { color: 'red' } : {}}\n\t\t\t\t\t>{content.length}/255</small>\n\t\t\t\t}\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default CommentForm;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as postsActions from '../../store/posts'\n\nimport './EditPostForm.css';\n\nfunction EditPostForm({ post, setEditCaption }) {\n    const dispatch = useDispatch();\n    const [caption, setCaption] = useState(post.caption);\n    const [validationErrors, setValidationErrors] = useState([])\n\n    useEffect(() => {\n        const errors = [];\n        if (caption.length > 255) errors.push('Caption must be 255 characters or less')\n        setValidationErrors(errors);\n    }, [caption])\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (validationErrors.length) return;\n\n        const newPost = {\n            id: post.id,\n            caption\n        }\n\n        dispatch(postsActions.editPost(newPost))\n            .then(_ => {\n                setEditCaption(false);\n            })\n            .catch(async (res) => {\n                console.log(res);\n                const data = res\n                if (data && data.errors) {\n                    setValidationErrors(data.errors);\n                }\n            });\n    }\n\n    return (\n        <div>\n            <form method='POST' action=\"/posts\" onSubmit={onSubmit}>\n                <textarea\n                    id='caption-input'\n                    name='caption'\n                    value={caption}\n                    style={caption.length > 255 ? { borderColor: 'red' } : {}}\n                    onChange={(e) => setCaption(e.target.value)}\n                />\n\n                <div id='edit-caption-lower'>\n                    <small style={caption.length > 255 ? { color: 'red' } : {}}\n                    >{caption.length}/255</small>\n                    <div id='edit-post-button-container'>\n                        <button type='button'\n                            id='cancel-caption-button'\n                            onClick={() => setEditCaption(false)}\n                        >Cancel</button>\n\n                        <button type='submit'\n                            id='save-caption-button'\n                            style={{ cursor: validationErrors.length ? 'not-allowed' : 'pointer' }}\n                        >Save</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default EditPostForm;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport * as postsActions from '../../store/posts'\nimport CommentCard from '../CommentCard';\nimport ProfileIcon from '../ProfileIcon';\nimport CommentForm from './CommentForm';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit, faHeart as faHeartSolid } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart, faComment as emptyComment } from '@fortawesome/free-regular-svg-icons'\nimport EditPostForm from './EditPostForm';\nimport './PostModal.css'\n\n\nimport { sortByCreatedAt } from '../../utils';\n\nexport default function PostModal({ postId, setShowModal }) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    let post = useSelector(state => state.posts[postId]);\n    // let comments = useSelector(state => state.posts[postId].comments)\n    let sessionUser = useSelector(state => state.session.user);\n\n    const [likes, setLikes] = useState(Object.values(post?.postLikes))\n    const [orderedComments, setOrderedComments] = useState(Object.values(post?.comments));\n    const [isLiked, setIsLiked] = useState(likes.find(like => like.userId === sessionUser.id) ? true : false);\n    const [editCaption, setEditCaption] = useState(false);\n    const [tick, setTick] = useState(+(post?.timeElapsed.split(' ')[0]) + 1);\n\n    // const [newComment, setNewComment] = useState('');\n    // const [chosenEmoji, setChosenEmoji] = useState(null);\n\n    useEffect(() => {\n        setOrderedComments(() => sortByCreatedAt(Object.values(post.comments)))\n    }, [post.comments])\n\n    // TODO Add likes dropdown to post modal - need user info from all likes in post.postLikes\n    useEffect(() => {\n        setLikes(() => Object.values(post.postLikes));\n        setIsLiked(() => Object.values(post.postLikes).find(like => like.userId === sessionUser.id) ? true : false);\n    }, [post.postLikes])\n\n    const deletePost = async () => {\n        if (window.confirm('Are you sure you want to delete your post?')) {\n            setShowModal(false);\n            await dispatch(postsActions.deletePost(post.id));\n            return history.push('/');\n        }\n    }\n\n    useEffect(() => {\n        let timer;\n\n        if (tick === 59) {\n            timer = setTimeout(() => {\n                post.timeElapsed = '1 minute ago';\n                setTick(60);\n            }, 1000);\n            return;\n        }\n\n        if (post.timeElapsed.endsWith('seconds ago') || post.timeElapsed.endsWith('second ago')) {\n            timer = setTimeout(() => setTick(prev => prev + 1), 1000);\n            post.timeElapsed = `${tick + 1} seconds ago`;\n        }\n\n        return () => clearTimeout(timer);\n    }, [post, tick]);\n\n    const toggleLike = async () => {\n        await dispatch(postsActions.togglePostLike(postId));\n    }\n\n\n\n    return (\n        <div className='post-modal-wrapper'>\n            <div className='post-image-wrapper'>\n                <img\n                    src={post.postImageUrl}\n                    alt=\"post\"\n                />\n            </div>\n\n            <div className='post-modal__right'>\n                <div id='post-info'>\n                    <div className='post-header'>\n                        <div className='post-icon' style={{ minWidth: '50px', width: '50px', height: '50px' }}>\n                            <ProfileIcon user={post.user} />\n                        </div>\n\n                        <div className='post-details-container'>\n                            <div className='post-details'>\n                                <h4 className='post-user-handle'>{post.user.handle}</h4>\n                                {editCaption\n                                    ? <EditPostForm post={post} setEditCaption={setEditCaption} />\n                                    : <span className='post-caption'>{post.caption}</span>\n                                }\n\n                            </div>\n                            {sessionUser.id !== post.user.id ? null : (\n                                <div className='post-buttons'>\n                                    <FontAwesomeIcon id='' icon={faEdit} onClick={() => setEditCaption(!editCaption)} />\n                                    <FontAwesomeIcon icon={faTrash} onClick={() => deletePost()} />\n\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n                <div className='comment-section'>\n                    {orderedComments.length > 0\n                        ? (\n                            <>\n                                {orderedComments.map(comment => {\n                                    return (\n                                        <div key={comment.id} className='single-comment'>\n                                            <CommentCard post={post} comment={comment} />\n                                        </div>\n                                    )\n                                })}\n                            </>\n                        ) : (\n                            <span style={{ color: 'var(--color-gray)', fontSize: '14px' }}>Be the first to leave a comment!</span>\n                        )\n                    }\n                </div>\n\n                <div id='likes-div'>\n                    <div id='likes-div-icons'>\n                        {!isLiked\n                            ? <FontAwesomeIcon icon={faHeart} id='like-button' style={{ fontSize: \"20px\", cursor: 'pointer' }}\n                                onClick={toggleLike}\n                            />\n                            : <FontAwesomeIcon icon={faHeartSolid} id='like-button' style={{ fontSize: \"20px\", color: \"var(--color-red)\", cursor: 'pointer' }}\n                                onClick={toggleLike}\n                            />\n                        }\n\n                        <FontAwesomeIcon icon={emptyComment} id='comment-icon' style={{ fontSize: \"20px\" }} />\n                    </div>\n\n                    <span id='post-like-count'>{likes.length} {likes?.length === 1 ? 'like' : 'likes'}</span>\n                    <small id='date-posted' style={{ color: 'var(--color-gray)', fontSize: '12px' }}>{post.timeElapsed}</small>\n                </div>\n\n                <div id='create-comment'>\n                    <CommentForm postId={postId} />\n                </div>\n            </div>\n\n        </div>\n    );\n}\n","import { faImage } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useEffect, useState } from 'react';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport Modal from '.';\nimport PostModal from '../PostModal/index.js';\n\n\nexport default function PostModalPopup({ postImageRef, post, isSearchItem }) {\n\tconst [showModal, setShowModal] = useState(false)\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\t// const root = document.getElementById('root');\n\t\tconst navbar = document.getElementById('navbar');\n\t\tconst navBackground = document.getElementById('nav-background')\n\t\tconst footer = document.getElementById('footer');\n\t\tconst footerBackground = document.getElementById('footer-background');\n\t\tconst feedPageBody = document.getElementById('all-posts');\n\t\tconst profilePageBody = document.getElementById('profile-page');\n\t\tif (showModal) {\n\t\t\t// NOTE: blurring the root element will cause the navbar to move positions\n\t\t\t// root.classList.add('blur');\n\n\t\t\tnavbar.classList.add('blur');\n\t\t\tnavBackground.classList.remove('hidden');\n\n\t\t\tfooter.classList.add('blur');\n\t\t\tfooterBackground.classList.remove('hidden');\n\n\t\t\tfeedPageBody?.classList.add('blur');\n\t\t\tprofilePageBody?.classList.add('blur');\n\t\t}\n\n\t\treturn () => {\n\t\t\tnavbar.classList.remove('blur');\n\t\t\tnavBackground.classList.add('hidden');\n\n\t\t\tfooter.classList.remove('blur');\n\t\t\tfooterBackground.classList.add('hidden');\n\n\t\t\tfeedPageBody?.classList.remove('blur');\n\t\t\tprofilePageBody?.classList.remove('blur');\n\t\t}\n\t}, [showModal]);\n\n\tconst redirectAndOpenModal = e => {\n\t\thistory.push(`/${post.user.handle}`, { modalId: post.id })\n\t\twindow.location.reload();\n\t\treturn;\n\t}\n\n\n\treturn (\n\t\t<>\n\t\t\t{isSearchItem\n\t\t\t\t? (\n\t\t\t\t\t<span onClick={redirectAndOpenModal} className=\"search-item\">\n\t\t\t\t\t\t<FontAwesomeIcon icon={faImage} style={{ color: 'var(--color-dark-gray)' }} />\n\t\t\t\t\t\t<div className='item-details'>\n\t\t\t\t\t\t\t<span>{post.caption}</span>\n\t\t\t\t\t\t\t<small>{post.user.handle}</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</span>\n\t\t\t\t) : (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={post.postImageUrl}\n\t\t\t\t\t\tid='post-image'\n\t\t\t\t\t\tref={postImageRef}\n\t\t\t\t\t\talt={`${post.user.handle}'s avatar`}\n\t\t\t\t\t\tonClick={() => setShowModal(true)}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\n\t\t\t{showModal && (\n\t\t\t\t<Modal closeModal={() => setShowModal(false)}>\n\t\t\t\t\t<PostModal postId={post.id} setShowModal={setShowModal} />\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as fullHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart as emptyHeart, faComment as emptyComment } from '@fortawesome/free-regular-svg-icons';\nimport PostModalPopup from '../Modals/PostModalPopup';\nimport ProfileIcon from '../ProfileIcon';\nimport * as postsActions from '../../store/posts';\nimport './PostCard.css'\nimport { sortByCreatedAt } from '../../utils';\n\nexport default function PostCard({ post }) {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const [likes, setLikes] = useState(Object.values(post.postLikes))\n    const [isLiked, setIsLiked] = useState(likes.find(like => like.userId === sessionUser.id) ? true : false);\n    const [comments, setComments] = useState(Object.values(post.comments))\n\n    // TODO Add likes dropdown to post modal - need user info from all likes in post.postLikes\n    useEffect(() => {\n        setLikes(() => Object.values(post.postLikes))\n        setIsLiked(() => Object.values(post.postLikes).find(like => like.userId === sessionUser.id) ? true : false);\n    }, [post.postLikes])\n\n    useEffect(() => {\n        setComments(sortByCreatedAt(Object.values(post.comments)))\n    }, [post.comments])\n\n    const toggleLike = async (e) => {\n        await dispatch(postsActions.togglePostLike(post.id));\n    }\n\n    return (\n        <div className='single-feed-post' key={post.id}>\n            <div className='post-image-div'>\n                <PostModalPopup post={post} />\n            </div>\n\n\n            <div className='post-info'>\n                <div className='user-image-and-handle'>\n                    <div style={{ width: '40px', height: '40px' }}>\n                        <ProfileIcon user={post.user} />\n                    </div>\n                    <span className='user-handle'>{post.user.handle}</span>\n                </div>\n\n                <div className='post-like-and-comment-count'>\n                    {/* <button type='button' onClick={(e) => toggleLike(post.id)} className={`like-button`}>\n                            {isLiked\n                                ? (\n                                    <FontAwesomeIcon icon={fullHeart} className={`like-icon`} />\n                                )\n                                : (\n                                    <FontAwesomeIcon icon={emptyHeart} className={`like-icon`} />\n                                )\n                            }\n                        </button> */}\n\n                    {!isLiked\n                        ? (\n                            <span onClick={toggleLike}\n                            ><FontAwesomeIcon icon={emptyHeart} className={`like-icon`} />{likes.length}</span>\n                        )\n                        : (\n                            <span onClick={toggleLike}\n                            ><FontAwesomeIcon icon={fullHeart} className={`like-icon`} />{likes.length}</span>\n                        )\n                    }\n                    <span><FontAwesomeIcon style={{ cursor: 'default' }} icon={emptyComment} className={`comment-icon`} />{comments.length}</span>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n","import React from 'react';\n\nimport PostCard from '../PostCard';\nimport './FeedPage.css';\n\nfunction FeedColumn({ column }) {\n\n\n    return (\n        <div className='posts-list'>\n            {column.map(post => (\n                <PostCard post={post} key={post.id} />\n            ))}\n        </div>\n    );\n}\n\nexport default FeedColumn\n","export default __webpack_public_path__ + \"static/media/loading-sphere-colorbg.cf2833c4.gif\";","import React from 'react'\n\nimport spinner from '../../static/loading-sphere-colorbg.gif'\nimport './LoadingSpinner.css'\n\nexport default function LoadingSpinner() {\n    return (\n        <div id='loading-spinner-container'>\n            <img\n                src={spinner}\n                alt=\"loading-spinner\"\n                id=\"loading-spinner\"\n            />\n            <h4>please wait while we load your page...</h4>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/feed-empty-1.20b5a593.jpg\";","export default __webpack_public_path__ + \"static/media/feed-empty-2.8f702fa5.jpg\";","export default __webpack_public_path__ + \"static/media/feed-empty-3.361cfde1.jpg\";","import React, { useEffect, useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as postsActions from '../../store/posts';\nimport './FeedPage.css';\n\nimport FeedColumn from './FeedColumn';\n\nimport { sortByCreatedAt } from '../../utils';\nimport LoadingSpinner from '../LoadingSpinner';\n\nimport emptyFeedImage1 from '../../static/feed-empty-1.jpg'\nimport emptyFeedImage2 from '../../static/feed-empty-2.jpg'\nimport emptyFeedImage3 from '../../static/feed-empty-3.jpg'\n\nfunction FeedPage() {\n    const dispatch = useDispatch();\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [nextPage, setNextPage] = useState(2);\n\n    let posts = useSelector(state => state.posts);\n    const [orderedPosts, setOrderedPosts] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            await dispatch(postsActions.fetchPosts('feed', null));\n            setIsLoaded(() => true);\n        })()\n    }, [dispatch]);\n\n    useEffect(() => {\n        setOrderedPosts(() => sortByCreatedAt(Object.values(posts)));\n    }, [posts])\n\n    const postsForListOne = [], postsForListTwo = [], postsForListThree = [];\n    let counter = 0;\n\n    for (let post of orderedPosts) {\n        switch (counter) {\n            case 0:\n                postsForListOne.push(post);\n                counter++;\n                continue;\n            case 1:\n                postsForListTwo.push(post);\n                counter++;\n                continue;\n            case 2:\n                postsForListThree.push(post);\n                counter = 0;\n                continue;\n            default:\n                console.error('COULDN\\'T PROPERLY ASSIGN POSTS')\n        }\n    }\n\n    useEffect(() => {\n        const scrolling_function = async () => {\n            if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight + 100) {\n                window.removeEventListener('scroll', scrolling_function);\n                await dispatch(postsActions.fetchPosts('feed', null, nextPage));\n                setNextPage(prev => prev + 1);\n            }\n        }\n\n        window.addEventListener('scroll', scrolling_function);\n\n        return () => {\n            window.removeEventListener('scroll', scrolling_function);\n        }\n    }, [nextPage]);\n\n    return !isLoaded ? <LoadingSpinner /> : (\n        <div>\n            {Object.values(posts).length > 0 ?\n                <div id='all-posts'>\n                    <FeedColumn column={postsForListOne} />\n                    <FeedColumn column={postsForListTwo} />\n                    <FeedColumn column={postsForListThree} />\n                </div>\n                :\n                <div id='empty-feed'>\n                    <div className='empty-feed-header'>\n                        <h2 className='no-feed-posts' style={{ fontWeight: 'bolder', fontSize: '25px', letterSpacing: '4px', fontStyle: 'italic' }}>welcome to hologram</h2>\n                        <h4 className='no-feed-posts' style={{ fontSize: '16px' }}>follow people to start seeing the photos they share</h4>\n                    </div>\n                    <img\n                        src={emptyFeedImage1}\n                        alt='friends'\n                    />\n                    <img\n                        src={emptyFeedImage3}\n                        alt='friends'\n                    />\n                    <img\n                        src={emptyFeedImage2}\n                        alt='friends'\n                    />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default FeedPage;\n","// ACTION VARIABLES ***************************************\nconst LOAD_SEARCH = 'session/LOAD_SEARCH';\n\n\n// ACTION CREATORS ****************************************\nconst loadSearch = (results) => {\n    return {\n        type: LOAD_SEARCH,\n        results\n    }\n}\n\n// THUNK ACTION CREATORS **********************************\nexport const fetchQuery = (query, onlyUsers=false) => async dispatch => {\n    let res\n    if (onlyUsers) {\n        res = await fetch(`/api/search/users/${query}/`);\n    } else {\n        res = await fetch(`/api/search/${query}/`);\n    }\n\n    if (res.ok) {\n        const results = await res.json();\n        dispatch(loadSearch(results));\n        return results;\n    }\n}\n\n// REDUCER ************************************************\nconst searchReducer = (state = [], action) => {\n    \n    switch (action.type) {\n        \n        case LOAD_SEARCH: {\n            // remove duplicates here\n            return [...state, ...action.results];\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default searchReducer;\n","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faUser } from '@fortawesome/free-solid-svg-icons';\nimport './SearchBar.css';\n\nimport Fuse from 'fuse.js';\nimport { fetchQuery } from '../../store/search';\nimport PostModalPopup from '../Modals/PostModalPopup';\nconst options = {\n\tincludeScore: true,\n\tfindAllMatches: true,\n\tuseExtendedSearch: true,\n\tkeys: [\n\t\t{ name: 'handle', weight: 2.0 },\n\t\t{ name: 'firstName', weight: 1.5 },\n\t\t{ name: 'lastName', weight: 1.0 },\n\t\t{ name: 'caption', weight: 0.5 },\n\t]\n}\n\n\nexport default function SearchBar() {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst searchMenuRef = useRef();\n\tconst searchInputRef = useRef();\n\t// const posts = useSelector(state => Object.values(state.posts));\n\tconst [query, setQuery] = useState('');\n\tconst [results, setResults] = useState([]);\n\tconst [showMenu, setShowMenu] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (!query) return;\n\n\t\tlet timer;\n\t\ttimer = setTimeout(async () => {\n\t\t\tconst dbQueryResults = await dispatch(fetchQuery(query));\n\n\t\t\tif (dbQueryResults.length) {\n\t\t\t\t// FOR FILTERING OUT DUPLICATES\n\t\t\t\tconst postsSet = new Set();\n\t\t\t\tconst usersSet = new Set();\n\t\t\t\tresults.forEach(item => {\n\t\t\t\t\tif (item?.item?.caption !== undefined) postsSet.add(item.item.id);\n\t\t\t\t\tif (item?.item?.handle !== undefined) usersSet.add(item.item.id);\n\t\t\t\t});\n\t\t\t\tconst newResults = dbQueryResults.filter(item => {\n\t\t\t\t\t// for posts\n\t\t\t\t\tif (item?.caption !== undefined) {\n\t\t\t\t\t\tif (!postsSet.has(item.id)) return true;\n\t\t\t\t\t}\n\t\t\t\t\t// for users\n\t\t\t\t\tif (item?.handle !== undefined) {\n\t\t\t\t\t\tif (!usersSet.has(item.id)) return true;\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tsetResults(prevResults => {\n\t\t\t\t\tconst fuse = new Fuse(newResults, options);\n\t\t\t\t\tconst fuseResults = fuse.search(query);\n\t\t\t\t\treturn fuseResults;\n\t\t\t\t})\n\t\t\t}\n\t\t}, 300);\n\n\t\treturn () => clearTimeout(timer);\n\t}, [query]);\n\n\tconst openMenu = () => {\n\t\t// if (showMenu) return;\n\t\tdocument.querySelector('.search');\n\t\tsetShowMenu(true);\n\t};\n\n\tuseEffect(() => {\n\t\tif (!showMenu) return;\n\n\t\tconst closeMenu = () => {\n\t\t\tdocument.querySelector('.search');\n\t\t\tsetShowMenu(() => !showMenu);\n\t\t};\n\n\t\tconst portal = document.getElementById('portal');\n\t\tconst listener = (e) => {\n\t\t\tif (searchMenuRef.current) {\n\t\t\t\tif (!searchMenuRef.current?.contains(e.target) && !portal.contains(e.target) && e.target !== searchInputRef.current) {\n\t\t\t\t\tsearchMenuRef.current.style.display = 'flex';\n\t\t\t\t\tcloseMenu();\n\t\t\t\t} else if (searchMenuRef.current?.contains(e.target)) {\n\t\t\t\t\tsearchMenuRef.current.style.display = 'none';\n\t\t\t\t\t// closeMenu();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdocument.addEventListener('click', listener);\n\n\t\treturn () => {\n\t\t\tsetShowMenu(false);\n\t\t\tdocument.removeEventListener(\"click\", listener);\n\t\t}\n\t}, [showMenu]);\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (!query) return;\n\t\tsetShowMenu(false);\n\t}\n\n\tconst goToProfile = (handle) => {\n\t\thistory.push(`/${handle}`);\n\t\twindow.location.reload(false);\n\t}\n\n\treturn (\n\t\t<div className='search'>\n\t\t\t<form className=\"search__form\" onSubmit={onSubmit}>\n\t\t\t\t<input type=\"text\" placeholder=\"search users or posts\"\n\t\t\t\t\tclassName=\"\"\n\t\t\t\t\tvalue={query}\n\t\t\t\t\tonChange={e => setQuery(e.target.value.replace(/[^a-zA-Z0-9\\.\\-\\s]/g, ''))}\n\t\t\t\t\tonClick={openMenu}\n\t\t\t\t\tonKeyPress={openMenu}\n\t\t\t\t\tref={searchInputRef}\n\t\t\t\t/>\n\t\t\t\t<FontAwesomeIcon icon={faSearch} style={{ color: 'var(--color-dark-gray)' }} />\n\t\t\t</form>\n\n\t\t\t{showMenu && (\n\t\t\t\t<div className='search-filter' ref={searchMenuRef}>\n\t\t\t\t\t{!results.length ? <div id=\"search-message\">No results to show</div> : null}\n\n\t\t\t\t\t{results.slice(0, 20).map((result, i) => {\n\t\t\t\t\t\tif (result.item?.hasOwnProperty('handle')) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<span key={i} onClick={() => goToProfile(result.item.handle)} className=\"search-item\">\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUser} style={{ color: 'var(--color-dark-gray)' }} />\n\t\t\t\t\t\t\t\t\t<div className='item-details'>\n\t\t\t\t\t\t\t\t\t\t<span className='line-clamp' style={{ fontSize: '16px' }}>{result.item.handle}</span>\n\t\t\t\t\t\t\t\t\t\t<small>{result.item.firstName} {result.item.lastName}</small>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else if (result.item?.hasOwnProperty('caption')) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<PostModalPopup key={i} isSearchItem={true} post={result.item} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import { useState, useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { logout } from '../../store/session';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faGear, faArrowRightFromBracket } from '@fortawesome/free-solid-svg-icons';\nimport './NavProfileButton.css'\n\nimport defaultProfileImage from '../../static/default-profile-image.png'\n\nexport default function NavProfileButton({ user }) {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\tconst [showMenu, setShowMenu] = useState(false);\n\n\tconst openMenu = () => {\n\t\tif (showMenu) return;\n\t\tdocument.querySelector('.nav-profile-button')\n\t\tsetShowMenu(true);\n\t};\n\n\tuseEffect(() => {\n\t\tif (!showMenu) return;\n\n\t\tconst closeMenu = () => {\n\t\t\tdocument.querySelector('.nav-profile-button')\n\t\t\tsetShowMenu(false);\n\t\t};\n\n\t\tdocument.addEventListener('click', closeMenu);\n\n\t\treturn () => {\n\t\t\tsetShowMenu(false);\n\t\t\tdocument.removeEventListener(\"click\", closeMenu);\n\t\t}\n\t}, [showMenu]);\n\n\tconst logoutUser = (e) => {\n\t\tsetShowMenu(false);\n\t\tif (window.confirm('Are you sure you want to log out?')) {\n\t\t\tdispatch(logout());\n\t\t\twindow.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n\t\t\thistory.push('/login');\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"nav-profile-button\" onClick={openMenu}>\n\t\t\t<img\n\t\t\t\tsrc={user.profileImageUrl !== '/default-profile-image.png' ? user.profileImageUrl : defaultProfileImage}\n\t\t\t\talt=\"profile preview\"\n\t\t\t/>\n\n\t\t\t{showMenu && (\n\t\t\t\t<div className=\"profile_nav_dropdown\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t//  to={`/${user.handle}`}\n\t\t\t\t\t\t\tid='temp'\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\twindow.scrollTo(0, 0);\n\t\t\t\t\t\t\t\thistory.push(`/${user.handle}`);\n\t\t\t\t\t\t\t\twindow.location.reload(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle={{ border: 'none', backgroundColor: 'transparent', padding: '2px' }}>\n\t\t\t\t\t\t\t<p style={{ letterSpacing: '1px', fontSize: '14.5px' }}>profile&nbsp;&nbsp;<FontAwesomeIcon icon={faUser}></FontAwesomeIcon></p>\n\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<NavLink to={`/users/settings`} onClick={() => window.scrollTo(0, 0)} style={{ width: '100%' }}>\n\t\t\t\t\t\t\tsettings&nbsp;&nbsp;\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faGear}></FontAwesomeIcon>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={logoutUser}>\n\t\t\t\t\t\tlog out&nbsp;&nbsp;\n\t\t\t\t\t\t<FontAwesomeIcon icon={faArrowRightFromBracket}></FontAwesomeIcon>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","export default __webpack_public_path__ + \"static/media/hologram-logo.257a8c2c.png\";","import { Link, useHistory } from 'react-router-dom'\nimport defaultProfileImage from '../../static/default-profile-image.png'\n\nimport './FollowsList.css'\n\nconst FollowsList = ({ follows }) => {\n    const history = useHistory();\n    return (\n        <>\n            {follows.map((follow) => {\n                return (\n                    <button\n                        onClick={() => {\n                            window.scroll(0, 0);\n                            history.push(`/${follow.handle}`);\n                            window.location.reload(false);\n                        }}\n                        style={{border: 'none', backgroundColor:'white'}}\n                        key={follow.id}\n                    >\n                        <div className='selected-dropdown-user'>\n                            <div className='user-profile-avatar'>\n                                <img className='follows-avatar-image' src={follow.profileImageUrl !== '/default-profile-image.png' ? follow.profileImageUrl : defaultProfileImage} alt='preview' />\n                            </div>\n                            <div className='justify-left'>\n                                <p className='follows-name'>{follow.firstName} {follow.lastName}</p>\n                                <p className='follows-handle'>{follow.handle}</p>\n                            </div>\n                        </div>\n                    </button>\n                )\n            })}\n\n        </>\n    );\n}\n\nexport default FollowsList;\n","import { useSelector } from \"react-redux\";\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport SearchBar from \"../SearchBar\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHouse, faCirclePlus, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport './NavBar.css';\nimport NavProfileButton from \"../NavProfileButton\";\n\nimport logo from '../../static/hologram-logo.png'\nimport FollowsList from \"../FollowsList\";\n\nconst NavBar = () => {\n\tconst sessionUser = useSelector(state => state.session.user);\n\tconst [showFollowers, setShowFollowers] = useState(false)\n\tconst [showFollowings, setShowFollowings] = useState(false)\n\n\tconst openFollowers = () => {\n\n\t\tif (showFollowers) return;\n\t\tdocument.querySelector('.sessionUser-followers')\n\t\tsetShowFollowers(true);\n\n\t}\n\n\n\tuseEffect(() => {\n\t\t// if (showFollowings) setShowFollowings(() => false)\n\t\tif (!showFollowers) return;\n\n\t\tconst closeFollowers = () => {\n\t\t\tdocument.querySelector('.sessionUser-followers')\n\t\t\tsetShowFollowers(false);\n\t\t};\n\n\t\tdocument.addEventListener('click', closeFollowers);\n\n\t\treturn () => {\n\t\t\tsetShowFollowers(false);\n\t\t\tdocument.removeEventListener(\"click\", closeFollowers);\n\t\t}\n\n\t}, [showFollowers]);\n\n\n\tconst openFollowings = () => {\n\t\tif (showFollowings) return;\n\t\tdocument.querySelector('.sessionUser-following')\n\t\tsetShowFollowings(true);\n\t}\n\n\tuseEffect(() => {\n\t\t// if (showFollowers) setShowFollowers(() => false)\n\t\tif (!showFollowings) return;\n\n\t\tconst closeFollowings = () => {\n\t\t\tdocument.querySelector('.sessionUser-followings')\n\t\t\tsetShowFollowings(false);\n\t\t};\n\n\t\tdocument.addEventListener('click', closeFollowings);\n\n\t\treturn () => {\n\t\t\tsetShowFollowings(false);\n\t\t\tdocument.removeEventListener(\"click\", closeFollowings);\n\t\t}\n\n\t}, [showFollowings]);\n\n\n\n\treturn !sessionUser ? null : (\n\t\t<>\n\t\t\t<div id='nav-background' className='hidden'>\n\t\t\t</div>\n\n\t\t\t<div id=\"navbar\">\n\t\t\t\t<div className=\"navbar-container\">\n\t\t\t\t\t<div className=\"nav__left\">\n\t\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t\t<div className=\"logo-wrapper\">\n\t\t\t\t\t\t\t\t<img src={logo}\n\t\t\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t\t\t\tclassName=\"nav__logo\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<h1><span style={{ color: 'var(--color-purple)' }}>holo</span><span style={{ color: 'rgb(215, 155, 134)' }}>gram</span></h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<div className=\"search-bar\">\n\t\t\t\t\t\t<SearchBar />\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<div className=\"nav__right\">\n\t\t\t\t\t\t<div className=\"nav__buttons\">\n\t\t\t\t\t\t\t<Link to='/'>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faHouse} className='nav__icon' />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link to='/posts/new'>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faCirclePlus} className='nav__icon' />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link to={`/messages`}>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEnvelope} className='nav__icon' />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"nav__stats\">\n\t\t\t\t\t\t\t<div className='sessionUser-followers'>\n\n\t\t\t\t\t\t\t\t{sessionUser?.followers.length ?\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='remove-button-styling stack add-hover '\n\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\tonClick={openFollowers}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span>{sessionUser?.followers.length}</span>\n\t\t\t\t\t\t\t\t\t\t<small>followers</small>\n\t\t\t\t\t\t\t\t\t</button> :\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='remove-button-styling stack'\n\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'default' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span>{sessionUser?.followers.length}</span>\n\t\t\t\t\t\t\t\t\t\t<small>followers</small>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{showFollowers && (\n\t\t\t\t\t\t\t\t\t<div className=\"follows-dropdown\">\n\t\t\t\t\t\t\t\t\t\t<div className='followers-list'>\n\t\t\t\t\t\t\t\t\t\t\t<FollowsList follows={sessionUser?.followers} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='sessionUser-followings'>\n\t\t\t\t\t\t\t\t{sessionUser?.following.length ?\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='remove-button-styling stack add-hover'\n\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\tonClick={openFollowings}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span>{sessionUser?.following.length}</span>\n\t\t\t\t\t\t\t\t\t\t<small>following</small>\n\t\t\t\t\t\t\t\t\t</button> :\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='remove-button-styling stack'\n\t\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'default' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span>{sessionUser?.following.length}</span>\n\t\t\t\t\t\t\t\t\t\t<small>following</small>\n\t\t\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{showFollowings && (\n\t\t\t\t\t\t\t\t\t<div className=\"follows-dropdown\">\n\t\t\t\t\t\t\t\t\t\t<div className='followings-list'>\n\t\t\t\t\t\t\t\t\t\t\t<FollowsList follows={sessionUser?.following} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<NavProfileButton user={sessionUser} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default NavBar;\n","import { useState } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport './Footer.css';\n\nexport default function Footer() {\n\n\tconst [showInfo, setShowInfo] = useState(true);\n\n\treturn showInfo ? (\n\t\t<>\n\t\t\t<div id='footer-background' className='hidden'>\n\t\t\t</div>\n\t\t\t<footer id='footer'>\n\t\t\t\t<div id='information-button'>\n\t\t\t\t\t<button id='change' type='button' onClick={() => setShowInfo(!showInfo)}>i</button>\n\t\t\t\t</div>\n\t\t\t\t<div id='languages'>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tMadi Lippmann\n\t\t\t\t\t\t\t<a href='https://github.com/madilippmann' target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faGithub} className='link-logo' />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href='https://www.linkedin.com/in/madilippmann/' target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faLinkedin} className='link-logo' />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tNick Esqueda\n\t\t\t\t\t\t\t<a href='https://github.com/nick-esqueda' target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faGithub} className='link-logo' />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href='https://www.linkedin.com/in/nick-esqueda/' target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faLinkedin} className='link-logo' />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\tKevin Pravia Mayorga\n\t\t\t\t\t\t\t<a href='https://github.com/reversalbino' target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faGithub} className='link-logo' />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href='https://www.linkedin.com/in/kevin-pravia-mayorga-51380817a' target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faLinkedin} className='link-logo' />\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t</>\n\t)\n\t\t:\n\t\t(\n\t\t\t<>\n\t\t\t\t<div id='footer-background' className='hidden'>\n\t\t\t\t</div>\n\t\t\t\t<footer id='footer'>\n\t\t\t\t\t<div id='information-button'>\n\t\t\t\t\t\t<button id='change' type='button' onClick={() => setShowInfo(!showInfo)}>i</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='languages'>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>React</li>\n\t\t\t\t\t\t\t<li>Redux</li>\n\t\t\t\t\t\t\t<li>Python</li>\n\t\t\t\t\t\t\t<li>Flask</li>\n\t\t\t\t\t\t\t<li>PostgreSQL</li>\n\t\t\t\t\t\t\t<li>SQLAlchemy</li>\n\t\t\t\t\t\t\t<li>Heroku</li>\n\t\t\t\t\t\t\t<li>AWS</li>\n\t\t\t\t\t\t\t<li>HTML</li>\n\t\t\t\t\t\t\t<li>CSS</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t</>\n\t\t)\n}\n\n// export default function Footer() {\n// \treturn (\n// \t\t<>\n// \t\t\t<div id='footer-background' className='hidden'>\n// \t\t\t</div>\n// \t\t\t<footer id='footer'>\n// \t\t\t\t<div id='information-button'>\n// \t\t\t\t\t{/* open information modal */}\n// \t\t\t\t\t<button type='button'>i</button>\n// \t\t\t\t</div>\n// \t\t\t\t<div id='languages'>\n// \t\t\t\t\t<ul>\n// \t\t\t\t\t\t<li>React</li>\n// \t\t\t\t\t\t<li>Redux</li>\n// \t\t\t\t\t\t<li>Python</li>\n// \t\t\t\t\t\t<li>Flask</li>\n// \t\t\t\t\t\t<li>PostgreSQL</li>\n// \t\t\t\t\t\t<li>SQLAlchemy</li>\n// \t\t\t\t\t\t<li>Heroku</li>\n// \t\t\t\t\t\t<li>AWS</li>\n// \t\t\t\t\t\t<li>HTML</li>\n// \t\t\t\t\t\t<li>CSS</li>\n// \t\t\t\t\t</ul>\n// \t\t\t\t</div>\n// \t\t\t</footer>\n// \t\t</>\n// \t);\n// }\n","import React from 'react'\nimport NavBar from '../NavBar/index.js'\nimport Footer from '../Footer'\n\nexport default function HeaderFooterWrapper({ children }) {\n  return (\n    <>\n      <NavBar />\n        {children}\n      <Footer />\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/session';\n\nimport './SignUpPage.css'\nimport logo from '../../static/hologram-logo.png'\n\n\n\nexport default function SignUpPage() {\n\tconst [errors, setErrors] = useState([]);\n\tconst [firstName, setFirstName] = useState('')\n\tconst [lastName, setLastName] = useState('')\n\tconst [handle, setHandle] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [repeatPassword, setRepeatPassword] = useState('');\n\tconst user = useSelector(state => state.session.user);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tdocument.body.classList.add('body')\n\t\treturn () => {\n\t\t\tdocument.body.classList.remove('body')\n\t\t};\n\t}, []);\n\n\tconst onSignUp = async (e) => {\n\t\te.preventDefault();\n\t\tif (password === repeatPassword) {\n\t\t\tconst data = await dispatch(signUp(firstName, lastName, handle, email, password));\n\t\t\tif (data) {\n\t\t\t\tsetErrors(data)\n\t\t\t} \n\t\t} else {\n\t\t\tsetErrors(() => [': Passwords do not match'])\n\t\t}\n\t};\n\n\tconst updateFirstName = (e) => {\n\t\tsetFirstName(e.target.value);\n\t};\n\n\tconst updateLastName = (e) => {\n\t\tsetLastName(e.target.value);\n\t};\n\n\tconst updateHandle = (e) => {\n\t\tsetHandle(e.target.value);\n\t};\n\n\tconst updateEmail = (e) => {\n\t\tsetEmail(e.target.value);\n\t};\n\n\tconst updatePassword = (e) => {\n\t\tsetPassword(e.target.value);\n\t};\n\n\tconst updateRepeatPassword = (e) => {\n\t\tsetRepeatPassword(e.target.value);\n\t};\n\n\tif (user) {\n\t\treturn <Redirect to='/' />;\n\t}\n\n\n\treturn (\n\t\t<div className='signup-login-container'>\n\n\t\t\t<div className='signup-login-form-container'>\n\t\t\t\t<form\n\t\t\t\t\tclassName='signup-login-form'\n\t\t\t\t\tonSubmit={onSignUp}\n\t\t\t\t>\n\t\t\t\t\t<div className='logo-title-container'>\n\t\t\t\t\t\t<img id='signup-login-logo' src={logo} alt='HOLOGRAM logo' />\n\t\t\t\t\t\t<h1><span style={{ color: 'var(--color-purple)' }}>holo</span><span style={{ color: 'rgb(215, 155, 134)' }}>gram</span></h1>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{errors.map((error, ind) => (\n\t\t\t\t\t\t\t<div className='error-styling' key={ind}>{error.split(': ')[1]}</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='signup-login-input-container'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\tonChange={updateFirstName}\n\t\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\t\tclassName='signup-login-input'\n\t\t\t\t\t\t\tplaceholder='first name'\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='signup-login-input-container'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='handle'\n\t\t\t\t\t\t\tonChange={updateLastName}\n\t\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\t\tclassName='signup-login-input'\n\t\t\t\t\t\t\tplaceholder='last name'\n\t\t\t\t\t\t\tautoComplete='new-password'\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='signup-login-input-container'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='handle'\n\t\t\t\t\t\t\tonChange={updateHandle}\n\t\t\t\t\t\t\tvalue={handle}\n\t\t\t\t\t\t\tclassName='signup-login-input'\n\t\t\t\t\t\t\tplaceholder='handle'\n\t\t\t\t\t\t\tautoComplete='new-password'\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='signup-login-input-container'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\tonChange={updateEmail}\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tclassName='signup-login-input'\n\t\t\t\t\t\t\tplaceholder='email'\n\t\t\t\t\t\t\tautoComplete='new-password'\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='signup-login-input-container'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tonChange={updatePassword}\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tclassName='signup-login-input'\n\t\t\t\t\t\t\tplaceholder='password'\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='signup-login-input-container'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tname='repeat_password'\n\t\t\t\t\t\t\tonChange={updateRepeatPassword}\n\t\t\t\t\t\t\tvalue={repeatPassword}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\tclassName='signup-login-input'\n\t\t\t\t\t\t\tplaceholder='confirm password'\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className='signup-login-submit-button' type='submit'>sign up</button>\n\t\t\t\t\t<div className='border-top'>\n\t\t\t\t\t\t<Link to='/login'>\n\t\t\t\t\t\t\t<p className='login-link'>\n\t\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t</div>\n\n\t\t</div>\n\t);\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { login } from '../../store/session';\n\nimport '../SignUpPage'\nimport logo from '../../static/hologram-logo.png'\nexport default function LoginPage() {\n  const [errors, setErrors] = useState([]);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.body.classList.add('body')\n    return () => {\n      document.body.classList.remove('body')\n    };\n  }, []);\n\n  const onLogin = async (e) => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    }\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  if (user) {\n    return <Redirect to='/' />;\n  }\n\n  const loginDemoUser = async () => {\n    await dispatch(login('demo@aa.io', 'password'))\n  }\n\n  return (\n    <div className='signup-login-container'>\n      <div className='signup-login-form-container'>\n        <form onSubmit={onLogin} className='signup-login-form'>\n          <div className='logo-title-container'>\n            <img id='signup-login-logo' src={logo} alt='HOLOGRAM logo' />\n            <h1><span style={{ color: 'var(--color-purple)' }}>holo</span><span style={{ color: 'rgb(215, 155, 134)' }}>gram</span></h1>\n          </div>\n\n          <div>\n            {errors.map((error, ind) => (\n              <div className='error-styling' key={ind}>{error.split(': ')[1]}</div>\n            ))}\n          </div>\n          <div className='signup-login-input-container'>\n            <input\n              name='email'\n              type='text'\n              placeholder='Email'\n              value={email}\n              className='signup-login-input'\n              onChange={updateEmail}\n              autoComplete='new-password'\n            />\n          </div>\n          <div className='signup-login-input-container'>\n            <input\n              name='password'\n              type='password'\n              placeholder='Password'\n              value={password}\n              className='signup-login-input'\n              onChange={updatePassword}\n            />\n\n          </div>\n          <button className='signup-login-submit-button' type='submit'>login</button>\n          <div className='demo-and-signup'>\n            <Link to='/sign-up'>\n              <p className='login-link'>\n                sign up\n              </p>\n            </Link>\n            <button className='demo-user-button' type='button' onClick={loginDemoUser}>demo</button>\n\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = props => {\n  const user = useSelector(state => state.session.user)\n  return (\n    <Route {...props}>\n      {(user)? props.children  : <Redirect to='/login' />}\n    </Route>\n  )\n};\n\n\nexport default ProtectedRoute;\n","import React from 'react'\n\nexport default function PageNotFound() {\n  return (\n    <div>page not found</div>\n  )\n}\n","// ACTION VARIABLES ***************************************\nconst ADD_USER = \"users/ADD_USER\";\nconst ADD_FOLLOW = 'users/ADD_FOLLOW'\nconst REMOVE_FOLLOW = 'users/REMOVE_FOLLOW';\n\n// ACTION CREATORS ****************************************\nconst addUser = (user) => {\n  return {\n    type: ADD_USER,\n    user\n  };\n};\n\nconst addFollow = (sessionUser) => {\n  return {\n    type: ADD_FOLLOW,\n    sessionUser\n  }\n}\n\nconst removeFollow = (sessionId) => {\n  return {\n    type: REMOVE_FOLLOW,\n    sessionId\n  }\n}\n\n// THUNK ACTION CREATORS **********************************\nexport const fetchUser = (handle) => async (dispatch) => {\n  const res = await fetch(`/api/users/${handle}/`);\n\n  if (res.ok) {\n    const user = await res.json();\n    dispatch(addUser(user));\n    return user;\n  }\n};\n\nexport const toggleUserFollow = (followedId) => async (dispatch) => {\n  const res = await fetch(`/api/follow/`, {\n    method: \"PUT\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(followedId)\n  });\n\n  if (res.ok) {\n    const data = await res.json();\n    if (data.status === 'deleted') {\n      dispatch(removeFollow(data.followerId));\n    } else {\n      dispatch(addFollow(data));\n    }\n    return data;\n  }\n};\n\n// REDUCER ************************************************\nconst userReducer = (state = {}, action) => {\n\n  switch (action.type) {\n    case ADD_USER: {\n      // newState = { ...state };\n      // newState[action.user.id] = action.user;\n      return action.user\n\n      // return newState;\n    }\n\n    case ADD_FOLLOW: {\n      //followers of followed user\n      const followersArray = Array.isArray(state.followers) ? [...state.followers] : [];\n\n      return {\n        ...state,\n        followers: [action.sessionUser, ...followersArray]\n      }\n    }\n\n    case REMOVE_FOLLOW: {\n      state.followers.splice(state.followers.indexOf(state.followers.find(follower => follower.userId === action.sessionId)), 1);\n\n      return {\n        ...state,\n        followers: [...state.followers]\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default userReducer;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as postsActions from '../../store/posts'\n\nimport './PostCard.css'\nimport PostModalPopup from '../Modals/PostModalPopup';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart as fullHeart } from '@fortawesome/free-solid-svg-icons';\nimport { faHeart as emptyHeart, faMessage as emptyComment } from '@fortawesome/free-regular-svg-icons';\n\n\nexport default function ProfilePostCard({ post }) {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const postImageRef = useRef();\n    const [likes, setLikes] = useState(Object.values(post.postLikes))\n    const [isLiked, setIsLiked] = useState(likes.find(like => like.userId === sessionUser.id) ? true : false);\n\n\n    // TODO Add likes dropdown to post modal - need user info from all likes in post.postLikes\n    useEffect(() => {\n        setLikes(() => Object.values(post.postLikes))\n        setIsLiked(() => Object.values(post.postLikes).find(like => like.userId === sessionUser.id) ? true : false);\n    }, [post.postLikes])\n\n\n    const toggleLike = async () => {\n        await dispatch(postsActions.togglePostLike(post.id));\n    }\n\n    return (\n        <div\n            key={post.id}\n            className={`post-div`}\n        >\n            <div className='overlay'>\n                <div id='blur-overlay'\n                    className={`postId-${post.id}`}\n                    onClick={(e) => {\n                        if (e.currentTarget === e.target) {\n                            postImageRef.current.click();\n                        }\n                    }}\n                ></div>\n\n                <div className='overlay__button-container'>\n                    <div className='centering-container like-container'>\n                        <button type='button' onClick={(e) => toggleLike(post.id)} className={`like-button`}>\n                            {isLiked\n                                ? (\n                                    <FontAwesomeIcon icon={fullHeart} className={`like-icon`} />\n                                )\n                                : (\n                                    <FontAwesomeIcon icon={emptyHeart} className={`like-icon`} />\n                                )\n                            }\n                        </button>\n                        <span>{likes.length}</span>\n                    </div>\n\n                    <div className='centering-container comment-container'\n                        onClick={(e) => postImageRef.current.click()}\n                    >\n                        <FontAwesomeIcon icon={emptyComment} className={`profile__post__icon comment-icon`} />\n                        <span>{Object.values(post.comments).length}</span>\n                    </div>\n                </div>\n            </div>\n\n            <PostModalPopup post={post} postImageRef={postImageRef} />\n        </div>\n\n\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useHistory, useParams } from 'react-router-dom';\n\nimport * as postsActions from '../../store/posts'\nimport * as userActions from '../../store/user'\nimport * as sessionActions from '../../store/session'\n\nimport FollowsList from '../FollowsList';\nimport './ProfilePage.css'\n\nimport defaultProfileImage from '../../static/default-profile-image.png'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport ProfilePostCard from '../PostCard/ProfilePostCard';\n\nimport { sortByCreatedAt } from '../../utils';\nimport LoadingSpinner from '../LoadingSpinner';\n\nfunction ProfilePage() {\n    const { handle } = useParams();\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const sessionUser = useSelector(state => state.session.user);\n    const user = useSelector(state => state.user);\n    let posts = useSelector(state => state.posts);\n\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [isFollowed, setIsFollowed] = useState();\n    const [showFollowers, setShowFollowers] = useState(false);\n    const [showFollowings, setShowFollowings] = useState(false);\n    const [orderedPosts, setOrderedPosts] = useState([]);\n\n    useEffect(() => {\n        (async () => {\n            const user = await dispatch(userActions.fetchUser(handle));\n            await dispatch(postsActions.fetchPosts('profile', user.id));\n            setIsFollowed(() => sessionUser?.following.find(followed => followed.id === user?.id) ? true : false)\n            setIsLoaded(true);\n        })()\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (isLoaded && history.location.state && history.location.state.modalId) {\n            const id = document.querySelector(`.postId-${history.location.state.modalId}`)\n            id.click()\n        }\n    }, [isLoaded])\n\n    useEffect(() => {\n        setOrderedPosts(() => sortByCreatedAt(Object.values(posts)));\n    }, [posts])\n\n    const openFollowers = () => {\n        if (showFollowers) return;\n        document.querySelector('.sessionUser-followers')\n        setShowFollowers(true);\n    }\n\n    useEffect(() => {\n        if (!showFollowers) return;\n\n        const closeFollowers = () => {\n            document.querySelector('.sessionUser-followers')\n            setShowFollowers(false);\n        };\n\n        document.addEventListener('click', closeFollowers);\n\n        return () => {\n            setShowFollowers(false);\n            document.removeEventListener(\"click\", closeFollowers);\n        }\n\n    }, [showFollowers]);\n\n\n    const openFollowings = () => {\n        if (showFollowings) return;\n        document.querySelector('.sessionUser-following')\n        setShowFollowings(true);\n    }\n\n    useEffect(() => {\n        if (!showFollowings) return;\n\n        const closeFollowings = () => {\n            document.querySelector('.sessionUser-followings')\n            setShowFollowings(false);\n        };\n\n        document.addEventListener('click', closeFollowings);\n\n        return () => {\n            setShowFollowings(false);\n            document.removeEventListener(\"click\", closeFollowings);\n        }\n\n    }, [showFollowings]);\n\n\n    if (!user) {\n        return null;\n    }\n\n    const toggleFollow = async () => {\n        await dispatch(userActions.toggleUserFollow(user.id));\n        await dispatch(sessionActions.fetchUser(sessionUser.handle));\n        setIsFollowed(() => !isFollowed);\n    }\n\n    return !isLoaded ? <LoadingSpinner /> : (\n        <div id='profile-page'>\n            <div className='profile-page user-header'>\n                <div className='profile-picture-container'>\n                    {sessionUser.id === user.id ?\n                        <img className='profile-picture' src={user.profileImageUrl !== '/default-profile-image.png' ? user.profileImageUrl : defaultProfileImage} alt={`${user.firstName}'s profile preview`}\n                            onClick={() => history.push(`/users/settings`)}\n                            style={{ cursor: \"pointer\" }}\n                        /> :\n                        <img className='profile-picture' src={user.profileImageUrl !== '/default-profile-image.png' ? user.profileImageUrl : defaultProfileImage} alt={`${user.firstName}'s profile preview`} />\n                    }\n                </div>\n                <div className='user-info-container flex-space-between '>\n                    <div className='handle-follow-options-div '>\n                        <h3 className='profile-page-handle' style={{ display: 'inline' }}>{user.handle}</h3>\n                        {user.id !== sessionUser.id ?\n                            <button\n                                className={`follow-new-post-button remove-button-styling ${isFollowed}`}\n                                type='button'\n                                onClick={toggleFollow}\n                            >\n                                {isFollowed ? <span>Unfollow</span> : <span>Follow</span>}\n                            </button> :\n                            <Link to='/posts/new'>\n                                <button\n                                    type='button'\n                                    className='follow-new-post-button true remove-button-styling different-padding'\n                                >\n                                    <FontAwesomeIcon icon={faPlus}\n                                        style={{ paddingLeft: '0', paddingRight: '10px' }}\n                                    />\n                                    New Post\n                                </button>\n                            </Link>\n                        }\n                    </div>\n                    <div className='posts-followers-following-div flex-gap flex'>\n                        <div><button type='button' style={{ cursor: 'default', border: 'none', backgroundColor: 'transparent', paddingLeft: '0' }}><p><span style={{ fontSize: '18px' }}>{orderedPosts.length}</span> posts</p></button></div>\n                        <div className='sessionUser-followers'>\n                            {user.followers.length ?\n                                <button\n                                    className='remove-button-styling stack'\n                                    type='button'\n                                    onClick={openFollowers}\n                                >\n                                    <p className='follows-profile add-hover'><span style={{ fontSize: '18px' }}>{user.followers.length}</span> followers</p>\n                                </button>\n                                :\n                                <button\n                                    className='remove-button-styling stack'\n                                    type='button'\n                                    style={{ cursor: 'default' }}\n                                >\n                                    <p ><span style={{ fontSize: '18px', cursor: 'default' }}>{user.followers.length}</span> followers</p>\n                                </button>\n                            }\n                            {showFollowers && (\n                                <div className=\"follows-dropdown\">\n                                    <div className='followers-list'>\n                                        <FollowsList follows={user?.followers} />\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                        <div className='sessionUser-followings'>\n                            {user.following.length ?\n                                <button\n                                    className='remove-button-styling stack'\n                                    type='button'\n                                    onClick={openFollowings}\n                                >\n                                    <p className='follows-profile add-hover'><span style={{ fontSize: '18px' }}>{user.following.length}</span> following</p>\n                                </button>\n\n                                :\n                                <button\n                                    className='remove-button-styling stack'\n                                    type='button'\n                                    style={{ cursor: 'default' }}\n                                >\n                                    <p ><span style={{ fontSize: '18px' }}>{user.following.length}</span> following</p>\n                                </button>\n\n                            }\n                            {showFollowings && (\n                                <div className=\"follows-dropdown\">\n                                    <div className='followings-list'>\n                                        <FollowsList follows={user?.following} />\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className='name-bio-div'>\n                        <h4>{user.firstName} {user.lastName}</h4>\n                        <p>{user.bio}</p>\n                    </div>\n\n                </div>\n            </div>\n\n            <div className='post-image-div profile-page user-posts' >\n                {orderedPosts.map(post => (\n                    <ProfilePostCard post={post} key={post.id} />\n                ))}\n                {orderedPosts.length === 0 && <p className='no-posts'>No posts to show</p>}\n            </div>\n        </div>\n    );\n}\n\nexport default ProfilePage;\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nexport default function SearchPage() {\n  const { query } = useParams()\n  \n  return (\n    <div>search for: { query }</div>\n  )\n}\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTimeElapsed } from '../../utils';\nimport './MessageContainer.css'\n\nimport defaultProfileImage from '../../static/default-profile-image.png'\nimport { UilMessage } from '@iconscout/react-unicons';\n\nconst MessageContainer = ({ thread, messages, onSubmit, message, setMessage, disabled }) => {\n    const sessionUser = useSelector(state => state.session.user);\n\n    // scroll messages to bottom on load\n    useEffect(() => {\n        const messagesMap = document.getElementById(\"messages-map\");\n        messagesMap.scrollTop = messagesMap.scrollHeight;\n    }, [messages])\n\n\n    return (\n        <div className='messages-inner-container'>\n            <div className='messages-header'>\n                <h2 className='thread-name'>{thread.threadName}</h2>\n            </div>\n\n            <div id='messages-map'>\n                {messages.map((message) => {\n                    return (\n                        <div key={message.id} id='message-container' className={message.userId === sessionUser.id ? 'me' : 'friend'}>\n                            <div className='message__name-and-date'>\n                                {message.userId !== sessionUser.id && <h4 className='message__name'>{message.user.firstName}</h4>}\n\n                                <h6 className='message__date'>{getTimeElapsed(message.createdAt)}</h6>\n                            </div>\n                            <div className='message-and-avatar'>\n                                <div className='message__avatar'>\n                                    <img\n                                        src={message.user.profileImageUrl !== '/default-profile-image.png' ? message.user.profileImageUrl : defaultProfileImage}\n                                        alt=\"profile preview\"\n                                    />\n                                </div>\n                                <p className='message__content'>{message.content}</p>\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n\n            <form onSubmit={onSubmit} className=\"message-form\">\n                <div className='input__container'>\n                    <input\n                        type='text'\n                        onChange={(e) => setMessage(e.target.value)}\n                        value={message}\n                        placeholder='start message...'\n\n                    />\n\n                    <button type='submit' id='message-submit' disabled={disabled} className={`${disabled}`} style={!disabled ? { cursor: 'pointer' } : {}}>\n                        <UilMessage size='25' id='send-icon' />\n                    </button>\n\n\n                </div>\n\n            </form>\n        </div>\n    );\n}\n\nexport default MessageContainer;\n","import { normalizeThreads, normalizeOneLevel } from \"./utils\";\n\n// ACTION VARIABLES ***************************************\nconst ADD_THREAD = 'messages/ADD_THREAD';\nconst LOAD_THREAD = 'messages/LOAD_THREAD'\nconst ADD_MESSAGE = 'messages/ADD_MESSAGE'\nconst LOAD_THREAD_PREVIEWS = 'messages/LOAD_THREAD_PREVIEWS'\n\n// ACTION CREATORS ****************************************\nconst addThread = (thread) => {\n    return {\n        type: ADD_THREAD,\n        thread\n    };\n};\n\nconst loadThread = (thread) => {\n    return {\n        type: LOAD_THREAD,\n        thread\n    }\n}\n\nconst addMessage = (message) => {\n    return {\n        type: ADD_MESSAGE,\n        message\n    }\n}\n\nconst loadThreadPreviews = (threadPreviews) => {\n    return {\n        type: LOAD_THREAD_PREVIEWS,\n        threadPreviews\n    }\n}\n\n// THUNK ACTION CREATORS **********************************\nexport const fetchThread = (threadId) => async (dispatch) => {\n    const res = await fetch(`/api/threads/${threadId}/`);\n\n    if (res.ok) {\n        const thread = await res.json();\n        dispatch(loadThread(thread));\n        return thread;\n    }\n};\n\nexport const createThread = (users) => async (dispatch) => {\n    const res = await fetch(`/api/threads/`, {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(users)\n    });\n\n    if (res.ok) {\n        const newThread = await res.json();\n        dispatch(addThread(newThread));\n        return newThread;\n    }\n};\n\nexport const createMessage = (message) => async (dispatch) => {\n    const res = await fetch(`/api/threads/${message.threadId}/`, {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(message)\n    });\n\n    if (res.ok) {\n        const newMessage = await res.json();\n        dispatch(addMessage(newMessage));\n        return newMessage;\n    }\n}\n\n\nexport const fetchThreadPreviews = () => async (dispatch) => {\n    const res = await fetch(`/api/threads/threadPreviews/`);\n    \n    if (res.ok) {\n        const threadPreviews = await res.json();\n        dispatch(loadThreadPreviews(threadPreviews));\n        return threadPreviews;\n    }\n}\n\n\n\n// REDUCER ************************************************\nconst threadsReducer = (state = { thread: {}, threadPreviews: [] }, action) => {\n\n    switch (action.type) {\n        case ADD_THREAD: {\n            return {\n                ...state,\n                thread: {\n                    ...action.thread,\n                    users: { ...normalizeOneLevel(action.thread.users) }\n                }\n            }\n        };\n\n        case LOAD_THREAD: {\n\n            return {\n                ...state,\n                thread: {\n                    ...action.thread,\n                    messages: [...action.thread.messages],\n                    users: { ...normalizeOneLevel(action.thread.users) }\n                }\n            }\n        }\n\n        case ADD_MESSAGE: {\n            return {\n                ...state,\n                thread: {\n                    ...state.thread,\n                    messages: [action.message, ...state.thread.messages],\n                }\n            }\n        }\n        \n        case LOAD_THREAD_PREVIEWS: {\n            return {\n                ...state,\n                threadPreviews: action.threadPreviews,\n            }\n        }\n\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default threadsReducer;\n","import { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faUser, faImage, faImagePortrait } from '@fortawesome/free-solid-svg-icons';\nimport './SearchBar.css';\nimport './UserSearchBar.css';\n\nimport Fuse from 'fuse.js';\nimport { fetchQuery } from '../../store/search';\nimport ProfileIcon from '../ProfileIcon';\nconst options = {\n    includeScore: true,\n    findAllMatches: true,\n    useExtendedSearch: true,\n    keys: [\n        { name: 'handle', weight: 0.7 },\n        { name: 'firstName', weight: 0.6 },\n        { name: 'lastName', weight: 0.4 },\n    ]\n}\n\nexport default function UserSearchBar({ userIds, setUserIds, setSelectedUsers }) {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    const [query, setQuery] = useState('');\n    const [results, setResults] = useState([]);\n    const [showMenu, setShowMenu] = useState(false);\n\n    useEffect(() => {\n        if (!query) return;\n\n        // FOR TESTING WITH USERS ALREADY IN STATE\n        const fuse = new Fuse(results, options);\n        const stateResults = fuse.search(query);\n        setResults(stateResults);\n\n        let timer;\n        if (results.length < 20) {\n            timer = setTimeout(async () => {\n                const dbQueryResults = await dispatch(fetchQuery(query, true));\n\n                // FOR FILTERING OUT DUPLICATES\n                const usersSet = new Set();\n                results.forEach(item => usersSet.add(item.item.id));\n                const newResults = dbQueryResults.filter(item => !usersSet.has(item.id));\n\n                const fuse = new Fuse(newResults, options);\n                const fuseResults = fuse.search(query);\n                setResults(prevResults => fuseResults.concat(prevResults))\n            }, 300);\n        }\n\n        return () => clearTimeout(timer);\n    }, [query]);\n\n    const openMenu = () => {\n        // if (showMenu) return;\n        document.querySelector('.search');\n        setShowMenu(true);\n    };\n\n    useEffect(() => {\n        if (!showMenu) return;\n\n        const closeMenu = () => {\n            document.querySelector('.search');\n            setShowMenu(() => !showMenu);\n        };\n\n        const dropdown = document.getElementById('user-search-dropdown');\n        const searchInput = document.getElementById('user-search-input')\n        const listener = (e) => {\n            if (dropdown.contains(e.target)) {\n                setQuery('');\n                closeMenu();\n                dropdown.style.display = 'none';\n            } else if (!dropdown.contains(e.target) && e.target !== searchInput) {\n                dropdown.style.display = 'flex';\n                closeMenu();\n            } else if (e.target === searchInput) {\n                openMenu();\n            }\n        }\n\n        document.addEventListener('click', listener);\n\n        return () => {\n            setShowMenu(false);\n            document.removeEventListener(\"click\", listener);\n        }\n    }, [showMenu]);\n\n    const addToSelectedUsers = user => {\n        if (userIds.has(user.id) || user.id === sessionUser.id) return;\n        \n        setUserIds(idSet => idSet.add(user.id));\n        setSelectedUsers(selectedUsers => {\n            return [...selectedUsers, user];\n        });\n        \n        setShowMenu(false);\n    }\n    \n    const onSubmit = e => {\n        e.preventDefault();\n        if (results[0]) addToSelectedUsers(results[0].item);\n    }\n\n\n    return (\n        <div className='search user-search-wrapper'>\n            <form className=\"search__form user-search\" onSubmit={onSubmit}>\n                <input type=\"text\" placeholder=\"add user...\"\n                    id='user-search-input'\n                    autoComplete='off'\n                    value={query}\n                    onChange={e => setQuery(e.target.value)}\n                    onClick={openMenu}\n                    onFocus={openMenu}\n                    onKeyPress={openMenu}\n                />\n            </form>\n\n            {showMenu && (\n                <div id='user-search-dropdown' className='search-filter user-search'>\n                    <div id=\"search-message\">searching for \"{query}\"...</div>\n\n                    {results.slice(0, 20).map((result, i) => (\n                        <span key={i} onClick={() => addToSelectedUsers(result.item)} className=\"search-item\">\n                            <div style={{ width: '42px', minWidth: '42px', height: '42px', maxHeight: '42px' }}>\n                                <ProfileIcon user={result.item} />\n                            </div>\n                            <div className='item-details'>\n                                <span>{result.item.handle}</span>\n                                <small>{result.item.firstName} {result.item.lastName}</small>\n                            </div>\n                        </span>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as threadsActions from '../../store/threads.js';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\nimport './MessagesSidebar.css';\nimport UserSearchBar from '../SearchBar/UserSearchBar.js';\n\nimport defaultProfileImage from '../../static/default-profile-image.png'\n\nconst MessagesSidebar = ({ currThreadId, setCurrThreadId, threadPreviews }) => {\n    // use currThreadId to highlight current thread w/CSS\n    const dispatch = useDispatch();\n    const sessionUser = useSelector(state => state.session.user);\n    // const usersFromSearch = useSelector(state => state.search);\n    const [userIds, setUserIds] = useState(new Set());\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [errors, setErrors] = useState('');\n    const [showErrors, setShowErrors] = useState(false);\n    \n    const createNewThread = async () => {\n        // make sure users don't make the same thread twice? won't error out if they do, but just preference\n        const users = selectedUsers.map(user => user.firstName);\n        if (selectedUsers.length === 0) {\n            setErrors('Please select at least one user to start a thread with.');\n            setShowErrors(true);\n            return;\n        }\n        \n        if (window.confirm(`Create a thread with ${users.join(', ')}?`)) {\n            const thread = await dispatch(threadsActions.createThread(Array.from(userIds)));\n            await dispatch(threadsActions.fetchThreadPreviews());\n            setCurrThreadId(thread.id);\n            setUserIds(new Set());\n            setSelectedUsers([]);\n            window.location.reload(false);\n        }\n    }\n\n    const removeFromSelectedUsers = userId => {\n        setUserIds(idSet => {\n            idSet.delete(userId);\n            return idSet;\n        });\n        setSelectedUsers(selectedUsers => selectedUsers.filter(user => user.id !== userId));\n    }\n    \n\n    \n    return (\n        <>\n            <div className='new-message-thread'>\n                <div className='user-search'>\n                    <UserSearchBar userIds={userIds} setUserIds={setUserIds} setSelectedUsers={setSelectedUsers} />\n                </div>\n\n                <div id='selected-users'>\n                    <div className='selected-users-map'>\n                        {!selectedUsers.length\n                            ? <span style={{ fontSize: '14px', padding: '8px', color: showErrors ? 'red' : 'gray' }}>\n                                { !showErrors ? \"search for someone to start a conversation...\" : errors }\n                                </span>\n                            : (\n                                <>\n                                    {selectedUsers.map(user => (\n                                        <span key={user.id} className=\"selected-user\">\n                                            {user.handle} <FontAwesomeIcon icon={faXmark} className='x-button' onClick={() => removeFromSelectedUsers(user.id)} />\n                                        </span>\n                                    ))}\n                                </>\n                            )}\n\n                    </div>\n\n                    <button type='button'\n                        className='create-thread-button follow-new-post-button false remove-button-styling different-padding'\n                        onClick={createNewThread}\n                    >\n                        create thread\n                    </button>\n                </div>\n            </div>\n\n\n            <div className='thread-previews-container'>\n                {threadPreviews.map((preview, i) => {\n                    let threadName = preview.users.length > 2 ? [\"You\"] : []\n                    for (const username of preview.users) {\n                        if (username !== sessionUser.firstName) {\n                            threadName.push(username);\n                        }\n                    }\n                    threadName = threadName.join(', ');\n                    \n                    return (\n                        <button\n                            type='button'\n                            onClick={() => setCurrThreadId(preview.threadId)}\n                            id={`${preview.threadId === currThreadId}`}\n                        >\n                            <div className='thread-preview' key={i}>\n                                {preview.numberOfUsers < 3\n                                    ? (\n                                        <>\n                                            <div className='preview__avatar single'>\n                                                <img src={preview.profileImage !== '/default-profile-image.png' ? preview.profileImage : defaultProfileImage} alt='user-avatar' />\n                                            </div>\n                                            <div className='thread-name-and-preview'>\n                                                <h4>{threadName}</h4>\n                                                <span className='line-clamp'>{preview.preview}</span>\n                                            </div>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <div className='preview__avatar group'>\n                                                <img src={preview.profileImage !== '/default-profile-image.png' ? preview.profileImage : defaultProfileImage} alt='user-avatar' />\n                                                <div id='circle1' />\n                                                <div id='circle2' />\n                                            </div>\n                                            <div className='thread-name-and-preview move-left'>\n                                                <h4 className='line-clamp'>{threadName}</h4>\n                                                <span className='line-clamp'>{preview.preview}</span>\n                                            </div>\n                                        </>\n                                    )}\n\n                            </div>\n                        </button>\n                    )\n                })}\n            </div>\n\n\n\n            {/* FIX FIX FIXPUT IN ANOTHER COMPONENT */}\n            {/* <div className='message-thread-list'>\n                {threads.map(thread => {\n                    const users = Object.values(thread.users)\n                    const userNames = thread.users.map(participant => participant.firstName);\n                    const participantNameString = userNames.join(', ');\n\n                    const [messages, setMessages] = useState(sortByCreatedAt(Object.values(thread.meesages)))\n\n                    return (\n                        <div className='message-thread-container'>\n                            <div>\n                                {users.length === 1 &&\n                                    <div className='overlapped-avatars'>\n                                        <img className='avatar-1' src={users[0].profileImageUrl} alt={users[0].handle} />\n                                        <img class='avatar-2' src={users[1].profileImageUrl} alt={users[1].handle} />\n                                    </div>\n                                }\n\n                                {users.length > 1 &&\n                                    <div>\n                                        <img className='single-avatar' src={users[0].profileImageUrl} alt={users[0].handle} />\n                                    </div>\n                                }\n                            </div>\n                            <div className='message-thread-users limit-text-length'>{participantString}</div>\n                            <div className='recent-message-preview limit-text-length'>\n                                {messages[0].content}\n                            </div>\n                        </div>\n                    )\n                })}\n\n            </div> */}\n        </>\n    );\n}\n\nexport default MessagesSidebar;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport MessageContainer from './MessageContainer';\nimport MessagesSidebar from './MessagesSidebar';\nimport LoadingSpinner from '../LoadingSpinner';\n\nimport * as threadsActions from '../../store/threads.js';\nimport './MessagePage.css';\n\nimport { io } from 'socket.io-client';\n\n\n// const socket = io.connect('http://localhost:5001/')\nconst socket = io.connect()\n\n\n\nconst MessagePage = () => {\n    // need to get most recent thread\n    const dispatch = useDispatch();\n    // const threadPreviews = useSelector(state => state.threadPreviews)\n    const thread = useSelector(state => state.threads.thread)\n    const threadPreviews = useSelector(state => state.threads.threadPreviews)\n    const sessionUser = useSelector(state => state.session.user)\n\n    const [currThreadId, setCurrThreadId] = useState(0);\n    const [prevThreadId, setPrevThreadId] = useState(0);\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [disabled, setDisabled] = useState(true);\n    const [isLoaded, setIsLoaded] = useState(false);\n\n\n\n\n    useEffect(() => {\n        (async () => {\n            // fetch thread previews\n            const threadPreviews = await dispatch(threadsActions.fetchThreadPreviews());\n            // fetch the thread that was most recently active\n            const thread = await dispatch(threadsActions.fetchThread(threadPreviews[0].threadId));\n            // set initial socket room/thread variables\n            setCurrThreadId(() => threadPreviews[0].threadId);\n            setPrevThreadId(() => threadPreviews[0].threadId);\n            // set messages for MessageContainer to display on load\n            setMessages(thread.messages)\n            setIsLoaded(true);\n        })()\n    }, [dispatch]);\n\n    // fetch the new room's thread data\n    useEffect(() => {\n        if (isLoaded) {\n            (async () => {\n                const thread = await dispatch(threadsActions.fetchThread(currThreadId));\n                setMessages(thread.messages)\n            })()\n        }\n    }, [currThreadId]);\n    \n    // for message form submit\n    const onSubmit = async (e) => {\n        e.preventDefault()\n\n        let newMessage = {\n            threadId: currThreadId,\n            userId: sessionUser.id,\n            content: message,\n        }\n\n        newMessage = await dispatch(threadsActions.createMessage(newMessage));\n        newMessage.room = currThreadId;\n        socket.send(newMessage)\n        setMessage(() => '')\n        // setMessages(prev => {\n            \n        // });\n    }\n\n\n    // SOCKETS *******************************************************\n    // start listening to the socket on page load\n    useEffect(() => {\n        socket.on('message', message => {\n            setMessages((messages) => [...messages, message])\n        })\n\n        return (() => socket.disconnect())\n    }, []);\n\n    // leave old room and join new room\n    useEffect(() => {\n        socket.emit(\"on_leave\", { handle: sessionUser.handle, room: prevThreadId });\n        socket.emit(\"on_join\", { handle: sessionUser.handle, room: currThreadId });\n        setPrevThreadId(currThreadId);\n    }, [currThreadId]);\n\n    // disabling the send button when no text\n    useEffect(() => {\n        if (message.length !== 0 && message.length <= 2000) setDisabled(() => false);\n        else setDisabled(() => true);\n    }, [message]);\n\n\n    // JSX *********************************************************\n    return !isLoaded ? <LoadingSpinner /> : (\n        <div id='messages-page-container'>\n            <div id='messages-sidebar'>\n                <MessagesSidebar currThreadId={currThreadId} setCurrThreadId={setCurrThreadId} threadPreviews={threadPreviews} />\n            </div>\n\n            <div id='messages-container'>\n                <MessageContainer thread={thread} messages={messages} onSubmit={onSubmit} message={message} setMessage={setMessage} disabled={disabled} />\n            </div>\n        </div>\n    );\n}\n\nexport default MessagePage;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nimport LoadingSpinner from '../LoadingSpinner';\n\nimport * as sessionActions from '../../store/session';\nimport './SettingsPage.css';\n\nimport defaultProfileImage from '../../static/default-profile-image.png'\n\nfunction SettingsPage() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const sessionUser = useSelector(state => state.session.user);\n    const [newFirstName, setNewFirstName] = useState(sessionUser.firstName);\n    const [newLastName, setNewLastName] = useState(sessionUser.lastName);\n    const [newBio, setNewBio] = useState(sessionUser.bio || '');\n    const [uploadFile, setUploadFile] = useState(null);\n    const [validationErrors, setValidationErrors] = useState([]);\n    const profileImage = sessionUser.profileImageUrl !== '/default-profile-image.png' ? sessionUser.profileImageUrl : defaultProfileImage\n    const [showLoading, setShowLoading] = useState(false);\n\n    // useEffect(() => {\n    //     const errors = [];\n    //     if (!uploadFile) errors.push('Please choose an image first before uploading.')\n    //     setValidationErrors(errors);\n    // }, [uploadFile]);\n\n    const s3upload = async (file) => {\n        if (!file) return console.log('upload a file first');\n        const formData = new FormData()\n\n        formData.append('file', file)\n\n        const res = await axios.post(\"/api/s3/upload/\", formData);\n\n        return res.data\n    }\n\n    const updateProfile = async (e) => {\n        e.preventDefault();\n        setShowLoading(true);\n        if (validationErrors.length) return validationErrors(true);\n\n\n        let user;\n        if (uploadFile) {\n            user = {\n                firstName: newFirstName,\n                lastName: newLastName,\n                bio: newBio,\n                userId: sessionUser.id,\n                profileImageUrl: await s3upload(uploadFile)\n            }\n        }\n        else {\n            user = {\n                firstName: newFirstName,\n                lastName: newLastName,\n                bio: newBio,\n                userId: sessionUser.id,\n                profileImageUrl: sessionUser.profileImageUrl\n            }\n        }\n\n\n        await dispatch(sessionActions.editUser(user));\n\n        setShowLoading(false);\n\n        window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n        return history.push(`/${sessionUser.handle}`);\n    }\n\n    return showLoading ? (\n        <div id='updating'>\n            <LoadingSpinner />\n            {/* <h2>Updating your infomation...</h2> */}\n        </div>\n    ) : (\n        <>\n            <form onSubmit={updateProfile} id='settings-form'>\n                <div id='left'>\n                    <p>Update profile image</p>\n                    <div id='upload-and-preview-section' style={{ 'display': 'block' }}>\n                        <div id='preview' style={{ 'border': 'none' }}>\n                            <img src={uploadFile ? URL.createObjectURL(uploadFile) : profileImage} alt='preview' id='image-preview' />\n                        </div>\n\n                        <div id='upload'>\n                            <label htmlFor='img' id='select-file-button'>SELECT IMAGE</label>\n                            <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\"\n                                onChange={e => setUploadFile(() => {\n                                    return e.target.files[0];\n                                })}\n                                hidden\n                            />\n                        </div>\n                    </div>\n\n                    <div className='error-container'>\n                        {validationErrors.map(err => (\n                            <div key={err}>{err}</div>\n                        ))}\n                    </div>\n                </div>\n\n                <div id='update-page-input-fields'>\n                    <p>Update information</p>\n                    <br />\n                    <br />\n                    <label htmlFor='new-first-name'>First Name</label>\n                    <input type='text' value={newFirstName} id='new-first-name' onChange={e => setNewFirstName(e.target.value)} />\n                    <br />\n                    <label htmlFor='new-last-name'>Last Name</label>\n                    <input type='text' value={newLastName} id='new-last-name' onChange={e => setNewLastName(e.target.value)} />\n                    <br />\n                    <label htmlFor='new-bio'>Bio</label>\n                    <textarea value={newBio} id='new-bio' onChange={e => setNewBio(e.target.value)} />\n                    <br />\n                    <button type='submit' id='update-button'>Update</button>\n                </div>\n            </form>\n        </>\n    )\n}\n\nexport default SettingsPage;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authenticate } from './store/session';\nimport CreatePostPage from './components/CreatePostPage';\nimport FeedPage from './components/FeedPage';\nimport HeaderFooterWrapper from './components/HeaderFooterWrapper';\nimport LoginPage from './components/LoginPage';\nimport ProtectedRoute from './components/auth/ProtectedRoute';\nimport PageNotFound from './components/PageNotFound';\nimport ProfilePage from './components/ProfilePage/index.js';\nimport SignUpPage from './components/SignUpPage';\nimport SearchPage from './components/SearchPage';\nimport MessagePage from './components/MessagePage';\nimport SettingsPage from './components/SettingsPage';\n\nfunction App() {\n\tconst [loaded, setLoaded] = useState(false);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tawait dispatch(authenticate());\n\t\t\tsetLoaded(true);\n\t\t})();\n\t}, [dispatch]);\n\n\tif (!loaded) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<HeaderFooterWrapper>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/login' exact={true}>\n\t\t\t\t\t\t<LoginPage />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path='/sign-up' exact={true}>\n\t\t\t\t\t\t<SignUpPage />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<ProtectedRoute path='/' exact={true} >\n\t\t\t\t\t\t<FeedPage />\n\t\t\t\t\t</ProtectedRoute>\n\n\t\t\t\t\t<ProtectedRoute exact path=\"/posts/new\">\n\t\t\t\t\t\t<CreatePostPage />\n\t\t\t\t\t</ProtectedRoute>\n\n\t\t\t\t\t<ProtectedRoute exact path=\"/search/:query\">\n\t\t\t\t\t\t<SearchPage />\n\t\t\t\t\t</ProtectedRoute>\n\n\t\t\t\t\t{/* FIX FIX FIX make routes dynamic */}\n\t\t\t\t\t<ProtectedRoute path='/messages' exact={true} >\n\t\t\t\t\t\t<MessagePage />\n\t\t\t\t\t</ProtectedRoute>\n\n\t\t\t\t\t<ProtectedRoute path='/:handle' exact={true} >\n\t\t\t\t\t\t<ProfilePage />\n\t\t\t\t\t</ProtectedRoute>\n\n\t\t\t\t\t<ProtectedRoute path='/users/settings' exact={true} >\n\t\t\t\t\t\t<SettingsPage />\n\t\t\t\t\t</ProtectedRoute>\n\n\t\t\t\t\t<Route>\n\t\t\t\t\t\t<PageNotFound />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</HeaderFooterWrapper>\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport postsReducer from './posts';\nimport session from './session'\nimport userReducer from './user';\nimport threadsReducer from './threads'\nimport searchReducer from './search';\nimport { loadingBarReducer } from 'react-redux-loading-bar';\n\nconst rootReducer = combineReducers({\n\tsession,\n\tposts: postsReducer,\n\tuser: userReducer,\n\tthreads: threadsReducer,\n\tsearch: searchReducer,\n\tloadingBar: loadingBarReducer\n});\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n\tenhancer = applyMiddleware(thunk);\n} else {\n\tconst logger = require('redux-logger').default;\n\tconst composeEnhancers =\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\tenhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n\treturn createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}